// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Softheon.Wallet.Api.Client
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface ISoftheonWalletAPI : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// Gets the bank account associated with the specified token.
        /// </summary>
        /// <param name='token'>
        /// The token.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BankAccountModel>> GetBankAccountByTokenWithHttpMessagesAsync(string token, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all bank accounts associated with the specified reference
        /// identifier.
        /// </summary>
        /// <param name='referenceId'>
        /// The reference identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<BankAccountModel>>> GetBankAccountsByReferenceIdWithHttpMessagesAsync(string referenceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates a bank account.
        /// </summary>
        /// <param name='updateBankAccountModel'>
        /// The update bank account model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> UpdateBankAccountWithHttpMessagesAsync(UpdateBankAccountModel updateBankAccountModel, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Posts a new bank account.
        /// </summary>
        /// <param name='bankAccountRequest'>
        /// The bank account.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BankAccountResponseModel>> CreateBankAccountWithHttpMessagesAsync(BankAccountRequestModel bankAccountRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the bin information for a specified credit card number.
        /// </summary>
        /// <param name='binRequest'>
        /// The bin request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<Bin>> GetBinWithHttpMessagesAsync(BinRequestModel binRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the checkout.
        /// </summary>
        /// <param name='checkoutId'>
        /// The checkout identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CheckoutResponseModel>> GetCheckoutWithHttpMessagesAsync(int checkoutId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Posts the specified model.
        /// </summary>
        /// <param name='model'>
        /// The model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CheckoutResponseModel>> CreateCheckoutWithHttpMessagesAsync(CheckoutRequestModel model, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all credit cards associated with the specified reference
        /// identifier.
        /// </summary>
        /// <param name='referenceId'>
        /// The reference identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<CreditCardModel>>> GetCreditCardsByReferenceIdWithHttpMessagesAsync(string referenceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates a credit card.
        /// </summary>
        /// <param name='updateCreditCardModel'>
        /// The update credit card model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> UpdateCreditCardWithHttpMessagesAsync(UpdateCreditCardModel updateCreditCardModel, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Posts a new credit card.
        /// </summary>
        /// <param name='creditCardRequest'>
        /// The new credit card.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CreditCardResponseModel>> CreateCreditCardWithHttpMessagesAsync(CreditCardRequestModel creditCardRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the specified payment by its identifier.
        /// </summary>
        /// <param name='id'>
        /// The payment identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<PaymentModel>> GetPaymentWithHttpMessagesAsync(int id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets payments associated with the specified reference identifier.
        /// </summary>
        /// <param name='referenceId'>
        /// Gets or sets the reference identifier.
        /// </param>
        /// <param name='minDate'>
        /// Gets or sets the minimum date.
        /// </param>
        /// <param name='maxDate'>
        /// Gets or sets the maximum date.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<PaymentModel>>> GetPaymentsByReferenceIdWithHttpMessagesAsync(string referenceId = default(string), System.DateTimeOffset? minDate = default(System.DateTimeOffset?), System.DateTimeOffset? maxDate = default(System.DateTimeOffset?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Posts a new payment.
        /// </summary>
        /// <param name='paymentRequest'>
        /// The new payment.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<PaymentModel>> CreatePaymentWithHttpMessagesAsync(PaymentRequestModel paymentRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the refunds associated with the specified payment.
        /// </summary>
        /// <param name='id'>
        /// The identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<RefundResultModel>>> GetRefundsWithHttpMessagesAsync(int id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Posts a new refund request.
        /// </summary>
        /// <param name='id'>
        /// The identifier of the payment to be refunded.
        /// </param>
        /// <param name='refundRequestModel'>
        /// The refund model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<RefundResultModel>> CreateRefundWithHttpMessagesAsync(int id, RefundRequestModel refundRequestModel, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets a single payment subscription with the specified subscription
        /// id.
        /// </summary>
        /// <param name='id'>
        /// The subscription id.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<SubscriptionModel>> GetSubscriptionWithHttpMessagesAsync(string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets all payment subscriptions associated with the specified
        /// reference id.
        /// </summary>
        /// <param name='referenceId'>
        /// The reference identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<SubscriptionModel>>> GetSubscriptionsByReferenceIdWithHttpMessagesAsync(string referenceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Updates a payment subscription.
        /// </summary>
        /// <param name='updateSubscriptionModel'>
        /// The update subscription model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> UpdateSubscriptionWithHttpMessagesAsync(UpdateSubscriptionModel updateSubscriptionModel, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Posts a new payment subscription.
        /// </summary>
        /// <param name='subscriptionRequest'>
        /// The subscription request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<SubscriptionResponseModel>> CreateSubscriptionWithHttpMessagesAsync(SubscriptionRequestModel subscriptionRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the wallet by wallet ID
        /// </summary>
        /// <param name='walletId'>
        /// The wallet identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<WalletModel>> GetWalletWithHttpMessagesAsync(int walletId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Puts the wallet.
        /// </summary>
        /// <param name='walletId'>
        /// The wallet identifier.
        /// </param>
        /// <param name='defaultPaymentToken'>
        /// The default payment token.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> UpdateWalletWithHttpMessagesAsync(int walletId, string defaultPaymentToken, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Gets the wallet by reference ID
        /// </summary>
        /// <param name='referenceId'>
        /// The reference identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<WalletModel>> GetWalletByReferenceIdWithHttpMessagesAsync(string referenceId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Creates a new empty wallet
        /// </summary>
        /// <param name='model'>
        /// The model.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<int?>> CreateWalletWithHttpMessagesAsync(WalletRequestModel model, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Adds a new credit card to the wallet
        /// </summary>
        /// <param name='walletId'>
        /// The wallet identifier.
        /// </param>
        /// <param name='request'>
        /// The request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<WalletModel>> AddWalletCreditCardWithHttpMessagesAsync(int walletId, WalletCreditCardRequestModel request, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Adds a new bank account to the wallet
        /// </summary>
        /// <param name='walletId'>
        /// The wallet identifier.
        /// </param>
        /// <param name='request'>
        /// The request.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<WalletModel>> AddWalletBankAccountWithHttpMessagesAsync(int walletId, WalletBankAccountRequestModel request, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the wallet bank account.
        /// </summary>
        /// <param name='walletId'>
        /// The wallet identifier.
        /// </param>
        /// <param name='walletBankAcctId'>
        /// The wallet bank acct identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> RemoveWalletBankAccountWithHttpMessagesAsync(int walletId, int walletBankAcctId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Deletes the wallet credit card.
        /// </summary>
        /// <param name='walletId'>
        /// The wallet identifier.
        /// </param>
        /// <param name='walletCreditCardId'>
        /// The wallet credit card identifier.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> RemoveWalletCreditCardWithHttpMessagesAsync(int walletId, int walletCreditCardId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
