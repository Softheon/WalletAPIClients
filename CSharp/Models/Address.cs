// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Softheon.Wallet.Api.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines the properties and methods of an address.
    /// </summary>
    public partial class Address
    {
        /// <summary>
        /// Initializes a new instance of the Address class.
        /// </summary>
        public Address()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Address class.
        /// </summary>
        /// <param name="address1">The first line of the street address.
        /// Typcically contains
        /// the number and street name.</param>
        /// <param name="city">The city where the address is situated.</param>
        /// <param name="state">The state where the address is located.</param>
        /// <param name="zipCode">The postal code for the address.</param>
        /// <param name="address2">The second line of the street address.
        /// Typically contains
        /// an apartment number, suite number or department.</param>
        public Address(string address1, string city, string state, string zipCode, string address2 = default(string))
        {
            Address1 = address1;
            Address2 = address2;
            City = city;
            State = state;
            ZipCode = zipCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the first line of the street address.  Typcically
        /// contains
        /// the number and street name.
        /// </summary>
        [JsonProperty(PropertyName = "address1")]
        public string Address1 { get; set; }

        /// <summary>
        /// Gets or sets the second line of the street address.  Typically
        /// contains
        /// an apartment number, suite number or department.
        /// </summary>
        [JsonProperty(PropertyName = "address2")]
        public string Address2 { get; set; }

        /// <summary>
        /// Gets or sets the city where the address is situated.
        /// </summary>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }

        /// <summary>
        /// Gets or sets the state where the address is located.
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets the postal code for the address.
        /// </summary>
        [JsonProperty(PropertyName = "zipCode")]
        public string ZipCode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Address1 == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Address1");
            }
            if (City == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "City");
            }
            if (State == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "State");
            }
            if (ZipCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ZipCode");
            }
        }
    }
}
