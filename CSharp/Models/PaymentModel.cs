<<<<<<< HEAD
// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Softheon.Wallet.Api.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The model sent to the client requests the details of a payment, or adds
    /// a new payment
    /// to the platform.
    /// </summary>
    public partial class PaymentModel
    {
        /// <summary>
        /// Initializes a new instance of the PaymentModel class.
        /// </summary>
        public PaymentModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PaymentModel class.
        /// </summary>
        /// <param name="id">The unique ID of the payment.</param>
        /// <param name="accountId">The unique ID of the account that the
        /// payment was made for.</param>
        /// <param name="paymentAmount">The payment amount.</param>
        /// <param name="description">The description of what was paid
        /// for.</param>
        /// <param name="referenceId">The client application provided reference
        /// ID for the payment.</param>
        /// <param name="paymentMethod">The method of payment.</param>
        /// <param name="result">The result of the payment request.</param>
        /// <param name="refunds">Gets or sets the refund result.</param>
        /// <param name="createdDate">The timestamp indicating when the payment
        /// was created.</param>
        /// <param name="modifiedDate">The timestamp indicating the last time
        /// that the details of the payment were modified.</param>
        public PaymentModel(long? id = default(long?), int? accountId = default(int?), double? paymentAmount = default(double?), string description = default(string), string referenceId = default(string), PaymentMethodModel paymentMethod = default(PaymentMethodModel), PaymentResultModel result = default(PaymentResultModel), IList<RefundResultModel> refunds = default(IList<RefundResultModel>), System.DateTimeOffset? createdDate = default(System.DateTimeOffset?), System.DateTimeOffset? modifiedDate = default(System.DateTimeOffset?))
        {
            Id = id;
            AccountId = accountId;
            PaymentAmount = paymentAmount;
            Description = description;
            ReferenceId = referenceId;
            PaymentMethod = paymentMethod;
            Result = result;
            Refunds = refunds;
            CreatedDate = createdDate;
            ModifiedDate = modifiedDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique ID of the payment.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or sets the unique ID of the account that the payment was made
        /// for.
        /// </summary>
        [JsonProperty(PropertyName = "accountId")]
        public int? AccountId { get; set; }

        /// <summary>
        /// Gets or sets the payment amount.
        /// </summary>
        [JsonProperty(PropertyName = "paymentAmount")]
        public double? PaymentAmount { get; set; }

        /// <summary>
        /// Gets or sets the description of what was paid for.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the client application provided reference ID for the
        /// payment.
        /// </summary>
        [JsonProperty(PropertyName = "referenceId")]
        public string ReferenceId { get; set; }

        /// <summary>
        /// Gets or sets the method of payment.
        /// </summary>
        [JsonProperty(PropertyName = "paymentMethod")]
        public PaymentMethodModel PaymentMethod { get; set; }

        /// <summary>
        /// Gets or sets the result of the payment request.
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public PaymentResultModel Result { get; set; }

        /// <summary>
        /// Gets or sets the refund result.
        /// </summary>
        [JsonProperty(PropertyName = "refunds")]
        public IList<RefundResultModel> Refunds { get; set; }

        /// <summary>
        /// Gets or sets the timestamp indicating when the payment was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdDate")]
        public System.DateTimeOffset? CreatedDate { get; set; }

        /// <summary>
        /// Gets or sets the timestamp indicating the last time that the
        /// details of the payment were modified.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedDate")]
        public System.DateTimeOffset? ModifiedDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PaymentMethod != null)
            {
                PaymentMethod.Validate();
            }
        }
    }
}
=======
// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Softheon.Wallet.Api.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The model sent to the client requests the details of a payment, or adds
    /// a new payment
    /// to the platform.
    /// </summary>
    public partial class PaymentModel
    {
        /// <summary>
        /// Initializes a new instance of the PaymentModel class.
        /// </summary>
        public PaymentModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PaymentModel class.
        /// </summary>
        /// <param name="id">The unique ID of the payment.</param>
        /// <param name="accountId">The unique ID of the account that the
        /// payment was made for.</param>
        /// <param name="paymentAmount">The payment amount.</param>
        /// <param name="description">The description of what was paid
        /// for.</param>
        /// <param name="referenceId">The client application provided reference
        /// ID for the payment.</param>
        /// <param name="paymentMethod">The method of payment.</param>
        /// <param name="result">The result of the payment request.</param>
        /// <param name="refunds">Gets or sets the refund result.</param>
        /// <param name="createdDate">The timestamp indicating when the payment
        /// was created.</param>
        /// <param name="modifiedDate">The timestamp indicating the last time
        /// that the details of the payment were modified.</param>
        public PaymentModel(long? id = default(long?), int? accountId = default(int?), double? paymentAmount = default(double?), string description = default(string), string referenceId = default(string), PaymentMethodModel paymentMethod = default(PaymentMethodModel), PaymentResultModel result = default(PaymentResultModel), IList<RefundResultModel> refunds = default(IList<RefundResultModel>), System.DateTimeOffset? createdDate = default(System.DateTimeOffset?), System.DateTimeOffset? modifiedDate = default(System.DateTimeOffset?))
        {
            Id = id;
            AccountId = accountId;
            PaymentAmount = paymentAmount;
            Description = description;
            ReferenceId = referenceId;
            PaymentMethod = paymentMethod;
            Result = result;
            Refunds = refunds;
            CreatedDate = createdDate;
            ModifiedDate = modifiedDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the unique ID of the payment.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or sets the unique ID of the account that the payment was made
        /// for.
        /// </summary>
        [JsonProperty(PropertyName = "accountId")]
        public int? AccountId { get; set; }

        /// <summary>
        /// Gets or sets the payment amount.
        /// </summary>
        [JsonProperty(PropertyName = "paymentAmount")]
        public double? PaymentAmount { get; set; }

        /// <summary>
        /// Gets or sets the description of what was paid for.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the client application provided reference ID for the
        /// payment.
        /// </summary>
        [JsonProperty(PropertyName = "referenceId")]
        public string ReferenceId { get; set; }

        /// <summary>
        /// Gets or sets the method of payment.
        /// </summary>
        [JsonProperty(PropertyName = "paymentMethod")]
        public PaymentMethodModel PaymentMethod { get; set; }

        /// <summary>
        /// Gets or sets the result of the payment request.
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public PaymentResultModel Result { get; set; }

        /// <summary>
        /// Gets or sets the refund result.
        /// </summary>
        [JsonProperty(PropertyName = "refunds")]
        public IList<RefundResultModel> Refunds { get; set; }

        /// <summary>
        /// Gets or sets the timestamp indicating when the payment was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdDate")]
        public System.DateTimeOffset? CreatedDate { get; set; }

        /// <summary>
        /// Gets or sets the timestamp indicating the last time that the
        /// details of the payment were modified.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedDate")]
        public System.DateTimeOffset? ModifiedDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PaymentMethod != null)
            {
                PaymentMethod.Validate();
            }
        }
    }
}
>>>>>>> 173eb7b7ca078419efbbaf9aa3d299c46af02203
