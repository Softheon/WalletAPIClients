package softheonwalletapiclient

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
    "github.com/Azure/go-autorest/autorest"
    "github.com/Azure/go-autorest/autorest/date"
)

// AmountType enumerates the values for amount type.
type AmountType string

const (
// Dynamic ...
Dynamic AmountType = "Dynamic"
// Fixed ...
Fixed AmountType = "Fixed"
    )

// AmountType1 enumerates the values for amount type 1.
type AmountType1 string

const (
// AmountType1Dynamic ...
AmountType1Dynamic AmountType1 = "Dynamic"
// AmountType1Fixed ...
AmountType1Fixed AmountType1 = "Fixed"
    )

// AmountType2 enumerates the values for amount type 2.
type AmountType2 string

const (
// AmountType2Dynamic ...
AmountType2Dynamic AmountType2 = "Dynamic"
// AmountType2Fixed ...
AmountType2Fixed AmountType2 = "Fixed"
    )

// BankAccountState enumerates the values for bank account state.
type BankAccountState string

const (
// BankAccountStateAuthorized ...
BankAccountStateAuthorized BankAccountState = "Authorized"
// BankAccountStateDisabled ...
BankAccountStateDisabled BankAccountState = "Disabled"
// BankAccountStateNew ...
BankAccountStateNew BankAccountState = "New"
// BankAccountStatePending ...
BankAccountStatePending BankAccountState = "Pending"
// BankAccountStateUnknown ...
BankAccountStateUnknown BankAccountState = "Unknown"
    )

// Brand enumerates the values for brand.
type Brand string

const (
// Amex ...
Amex Brand = "Amex"
// Discover ...
Discover Brand = "Discover"
// MasterCard ...
MasterCard Brand = "MasterCard"
// Unknown ...
Unknown Brand = "Unknown"
// Visa ...
Visa Brand = "Visa"
    )

// CardState enumerates the values for card state.
type CardState string

const (
// CardStateAuthorized ...
CardStateAuthorized CardState = "Authorized"
// CardStateDeleted ...
CardStateDeleted CardState = "Deleted"
// CardStateExpired ...
CardStateExpired CardState = "Expired"
// CardStateInvalid ...
CardStateInvalid CardState = "Invalid"
// CardStateNew ...
CardStateNew CardState = "New"
// CardStateUnknown ...
CardStateUnknown CardState = "Unknown"
    )

// CardState1 enumerates the values for card state 1.
type CardState1 string

const (
// CardState1Authorized ...
CardState1Authorized CardState1 = "Authorized"
// CardState1Deleted ...
CardState1Deleted CardState1 = "Deleted"
// CardState1Expired ...
CardState1Expired CardState1 = "Expired"
// CardState1Invalid ...
CardState1Invalid CardState1 = "Invalid"
// CardState1New ...
CardState1New CardState1 = "New"
// CardState1Unknown ...
CardState1Unknown CardState1 = "Unknown"
    )

// CardType enumerates the values for card type.
type CardType string

const (
// CardTypeAmex ...
CardTypeAmex CardType = "Amex"
// CardTypeDiscover ...
CardTypeDiscover CardType = "Discover"
// CardTypeMasterCard ...
CardTypeMasterCard CardType = "MasterCard"
// CardTypeUnknown ...
CardTypeUnknown CardType = "Unknown"
// CardTypeVisa ...
CardTypeVisa CardType = "Visa"
    )

// PaymentType enumerates the values for payment type.
type PaymentType string

const (
// PaymentTypeACH ...
PaymentTypeACH PaymentType = "ACH"
// PaymentTypeCreditCard ...
PaymentTypeCreditCard PaymentType = "Credit Card"
// PaymentTypeUnknown ...
PaymentTypeUnknown PaymentType = "Unknown"
    )

// PaymentType1 enumerates the values for payment type 1.
type PaymentType1 string

const (
// PaymentType1ACH ...
PaymentType1ACH PaymentType1 = "ACH"
// PaymentType1CreditCard ...
PaymentType1CreditCard PaymentType1 = "Credit Card"
// PaymentType1Unknown ...
PaymentType1Unknown PaymentType1 = "Unknown"
    )

// PaymentType2 enumerates the values for payment type 2.
type PaymentType2 string

const (
// PaymentType2ACH ...
PaymentType2ACH PaymentType2 = "ACH"
// PaymentType2CreditCard ...
PaymentType2CreditCard PaymentType2 = "Credit Card"
// PaymentType2Unknown ...
PaymentType2Unknown PaymentType2 = "Unknown"
    )

// State enumerates the values for state.
type State string

const (
// StateAuthorized ...
StateAuthorized State = "Authorized"
// StateDisabled ...
StateDisabled State = "Disabled"
// StateNew ...
StateNew State = "New"
// StatePending ...
StatePending State = "Pending"
// StateUnknown ...
StateUnknown State = "Unknown"
    )

// State1 enumerates the values for state 1.
type State1 string

const (
// Active ...
Active State1 = "Active"
// Expired ...
Expired State1 = "Expired"
// Inactive ...
Inactive State1 = "Inactive"
    )

// State2 enumerates the values for state 2.
type State2 string

const (
// State2Active ...
State2Active State2 = "Active"
// State2Expired ...
State2Expired State2 = "Expired"
// State2Inactive ...
State2Inactive State2 = "Inactive"
    )

// State3 enumerates the values for state 3.
type State3 string

const (
// State3Active ...
State3Active State3 = "Active"
// State3Expired ...
State3Expired State3 = "Expired"
// State3Inactive ...
State3Inactive State3 = "Inactive"
    )

// State4 enumerates the values for state 4.
type State4 string

const (
// State4Active ...
State4Active State4 = "Active"
// State4Expired ...
State4Expired State4 = "Expired"
// State4Inactive ...
State4Inactive State4 = "Inactive"
    )

// Status enumerates the values for status.
type Status string

const (
// StatusAuthorized ...
StatusAuthorized Status = "Authorized"
// StatusCancelled ...
StatusCancelled Status = "Cancelled"
// StatusCaptured ...
StatusCaptured Status = "Captured"
// StatusChargeBack ...
StatusChargeBack Status = "Charge Back"
// StatusDeclined ...
StatusDeclined Status = "Declined"
// StatusExpired ...
StatusExpired Status = "Expired"
// StatusFailed ...
StatusFailed Status = "Failed"
// StatusNew ...
StatusNew Status = "New"
// StatusPartiallyRefunded ...
StatusPartiallyRefunded Status = "Partially Refunded"
// StatusRefunded ...
StatusRefunded Status = "Refunded"
// StatusUnknown ...
StatusUnknown Status = "Unknown"
    )

// Status1 enumerates the values for status 1.
type Status1 string

const (
// Status1Authorized ...
Status1Authorized Status1 = "Authorized"
// Status1Cancelled ...
Status1Cancelled Status1 = "Cancelled"
// Status1Captured ...
Status1Captured Status1 = "Captured"
// Status1ChargeBack ...
Status1ChargeBack Status1 = "Charge Back"
// Status1Declined ...
Status1Declined Status1 = "Declined"
// Status1Expired ...
Status1Expired Status1 = "Expired"
// Status1Failed ...
Status1Failed Status1 = "Failed"
// Status1New ...
Status1New Status1 = "New"
// Status1PartiallyRefunded ...
Status1PartiallyRefunded Status1 = "Partially Refunded"
// Status1Refunded ...
Status1Refunded Status1 = "Refunded"
// Status1Unknown ...
Status1Unknown Status1 = "Unknown"
    )

// Type enumerates the values for type.
type Type string

const (
// TypeChecking ...
TypeChecking Type = "Checking"
// TypeSavings ...
TypeSavings Type = "Savings"
// TypeUnknown ...
TypeUnknown Type = "Unknown"
    )

// Type1 enumerates the values for type 1.
type Type1 string

const (
// Type1Checking ...
Type1Checking Type1 = "Checking"
// Type1Savings ...
Type1Savings Type1 = "Savings"
// Type1Unknown ...
Type1Unknown Type1 = "Unknown"
    )

// Type2 enumerates the values for type 2.
type Type2 string

const (
// Type2ACH ...
Type2ACH Type2 = "ACH"
// Type2CreditCard ...
Type2CreditCard Type2 = "Credit Card"
// Type2Unknown ...
Type2Unknown Type2 = "Unknown"
    )

// Address defines the properties and methods of an address.
type Address struct {
    // Address1 - The first line of the street address.  Typcically contains
    //             the number and street name.
    Address1 *string `json:"address1,omitempty"`
    // Address2 - The second line of the street address.  Typically contains
    //             an apartment number, suite number or department.
    Address2 *string `json:"address2,omitempty"`
    // City - The city where the address is situated.
    City *string `json:"city,omitempty"`
    // State - The state where the address is located.
    State *string `json:"state,omitempty"`
    // ZipCode - The postal code for the address.
    ZipCode *string `json:"zipCode,omitempty"`
}

// BankAccountModel the model sent to the client in response to a GET request for a bank account.
type BankAccountModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"id,omitempty"`
    // Token - The payment token for the bank account.
    Token *string `json:"token,omitempty"`
    // AccountNumber - The bank account number.
    AccountNumber *string `json:"accountNumber,omitempty"`
    // RoutingNumber - The routing number of the bank where the bank account was opened.
    RoutingNumber *string `json:"routingNumber,omitempty"`
    // Type - The bank account type. Possible values include: 'TypeUnknown', 'TypeChecking', 'TypeSavings'
    Type Type `json:"type,omitempty"`
    // State - The state that the bank acocunt is in. Possible values include: 'StateUnknown', 'StateNew', 'StatePending', 'StateAuthorized', 'StateDisabled'
    State State `json:"state,omitempty"`
    // Nickname - The aribtrary nickname of the account, used as a way to identify the account.
    Nickname *string `json:"nickname,omitempty"`
    // AccountHolderName - The name of the individual or entity that is autorized to make transactions for the bank account.
    AccountHolderName *string `json:"accountHolderName,omitempty"`
    // AccountHolderAddress - The mailing address for the account holder.
    AccountHolderAddress *Address `json:"accountHolderAddress,omitempty"`
    // Email - The email address for the account holder.
    Email *string `json:"email,omitempty"`
    // ReferenceID - The client application provided reference ID for the bank account.
    ReferenceID *string `json:"referenceId,omitempty"`
    // CreatedTime - The timestamp indicating when the bank account was created.
    CreatedTime *date.Time `json:"createdTime,omitempty"`
    // ModifiedTime - The timestamp indicating the last time that the details of the bank account were modified.
    ModifiedTime *date.Time `json:"modifiedTime,omitempty"`
}

// BankAccountRequestModel the request model sent by the client for adding new bank accounts to the payment platform.
type BankAccountRequestModel struct {
    // AccountNumber - The bank account number.
    AccountNumber *string `json:"accountNumber,omitempty"`
    // RoutingNumber - The routing number of the bank where the bank account was opened.
    RoutingNumber *string `json:"routingNumber,omitempty"`
    // AccountHolderName - The name of the individual or entity that is autorized to make transactions for the bank account.
    AccountHolderName *string `json:"accountHolderName,omitempty"`
    // AccountHolderAddress - The mailing address for the account holder.
    AccountHolderAddress *Address `json:"accountHolderAddress,omitempty"`
    // Type - The bank account type. Possible values include: 'Type1Unknown', 'Type1Checking', 'Type1Savings'
    Type Type `json:"type,omitempty"`
    // ReferenceID - The client application provided reference ID for the bank account.
    ReferenceID *string `json:"referenceId,omitempty"`
    // Nickname - The aribtrary nickname of the account, used as a way to identify the account.
    Nickname *string `json:"nickname,omitempty"`
    // Email - The email address for the account holder.
    Email *string `json:"email,omitempty"`
    // RedirectURL - The url that the client will be redirected to after the bank account has been created.
    RedirectURL *string `json:"redirectUrl,omitempty"`
}

// BankAccountResponseModel the response model that is returned to the client when a new bank account is added
// to the platform
type BankAccountResponseModel struct {
    autorest.Response `json:"-"`
    // Token - The payment token for the bank account.
    Token *string `json:"token,omitempty"`
    // BankAccountState - The state that the bank acocunt is in. Possible values include: 'BankAccountStateUnknown', 'BankAccountStateNew', 'BankAccountStatePending', 'BankAccountStateAuthorized', 'BankAccountStateDisabled'
    BankAccountState BankAccountState `json:"bankAccountState,omitempty"`
    // RedirectURL - The url that the client will be redirected to after the bank account has been created.
    RedirectURL *string `json:"redirectUrl,omitempty"`
}

// Bin defines a BIN (bank identification number)
type Bin struct {
    autorest.Response `json:"-"`
    // Bin - Gets the bin.
    Bin *string `json:"bin,omitempty"`
    // Brand - Gets or sets the brand. Possible values include: 'Unknown', 'Visa', 'MasterCard', 'Amex', 'Discover'
    Brand Brand `json:"brand,omitempty"`
    // IsDebitCard - Gets or sets a value indicating whether this instance is debit.
    IsDebitCard *bool `json:"isDebitCard,omitempty"`
    // IsCheckCard - Gets or sets a value indicating whether this instance is check card.
    IsCheckCard *bool `json:"isCheckCard,omitempty"`
    // IsGiftCard - Gets or sets a value indicating whether this instance is gift card.
    IsGiftCard *bool `json:"isGiftCard,omitempty"`
    // IsCorporateCard - Gets or sets a value indicating whether this instance is corporate card.
    IsCorporateCard *bool `json:"isCorporateCard,omitempty"`
    // IsFleetCard - Gets or sets a value indicating whether this instance is fleet card.
    IsFleetCard *bool `json:"isFleetCard,omitempty"`
    // IsPrepaidCard - Gets or sets a value indicating whether this instance is prepaid card.
    IsPrepaidCard *bool `json:"isPrepaidCard,omitempty"`
}

// CheckoutRequestModel checkout request model
type CheckoutRequestModel struct {
    // RedirectURL - Gets or sets the redirect URL.
    RedirectURL *string `json:"redirectUrl,omitempty"`
    // ReferenceID - Gets or sets the reference identifier.
    ReferenceID *string `json:"referenceId,omitempty"`
    // Amount - Gets or sets the amount.
    Amount *float64 `json:"amount,omitempty"`
    // NameOnAccount - Gets or sets the name on account.
    NameOnAccount *string `json:"nameOnAccount,omitempty"`
    // ExpirationDate - Gets or sets the expiration date.
    ExpirationDate *date.Time `json:"expirationDate,omitempty"`
    // EnableBillingInformation - Gets or sets a value indicating whether [enable billing information].
    EnableBillingInformation *bool `json:"enableBillingInformation,omitempty"`
    // BillingAddress - Gets or sets the billing address.
    BillingAddress *Address `json:"billingAddress,omitempty"`
    // Email - Gets or sets the email.
    Email *string `json:"email,omitempty"`
    // RequireEmail - Gets or sets a value indicating whether [require email].
    RequireEmail *bool `json:"requireEmail,omitempty"`
    // EnableSaveOption - Gets or sets a value indicating whether [enable save option].
    EnableSaveOption *bool `json:"enableSaveOption,omitempty"`
}

// CheckoutResponseModel checkout Response
type CheckoutResponseModel struct {
    autorest.Response `json:"-"`
    // CheckoutID - Gets or sets the checkout identifier.
    CheckoutID *int32 `json:"checkoutId,omitempty"`
    // ClientID - Gets or sets the client identifier.
    ClientID *string `json:"clientId,omitempty"`
    // RedirectURL - Gets or sets the redirect URL.
    RedirectURL *string `json:"redirectUrl,omitempty"`
    // ReferenceID - Gets or sets the reference identifier.
    ReferenceID *string `json:"referenceId,omitempty"`
    // Amount - Gets or sets the amount.
    Amount *float64 `json:"amount,omitempty"`
    // NameOnAccount - Gets or sets the name on account.
    NameOnAccount *string `json:"nameOnAccount,omitempty"`
    // ExpirationDate - Gets or sets the expiration date.
    ExpirationDate *date.Time `json:"expirationDate,omitempty"`
    // EnableBillingInformation - Gets or sets a value indicating whether [enable billing information].
    EnableBillingInformation *bool `json:"enableBillingInformation,omitempty"`
    // BillingAddress - Gets or sets the billing address.
    BillingAddress *Address `json:"billingAddress,omitempty"`
    // Email - Gets or sets the email.
    Email *string `json:"email,omitempty"`
    // RequireEmail - Gets or sets a value indicating whether [require email].
    RequireEmail *bool `json:"requireEmail,omitempty"`
    // EnableSaveOption - Gets or sets a value indicating whether [enable save option].
    EnableSaveOption *bool `json:"enableSaveOption,omitempty"`
}

// CreditCardModel the model sent to the client in response to a GET request for a credit card.
type CreditCardModel struct {
    // ID - Gets or sets the identifier.
    ID *int32 `json:"id,omitempty"`
    // Token - The payment token for the credit card.
    Token *string `json:"token,omitempty"`
    // CardHolderName - The name of the cardholder, as it appears on the front of the credit card.
    CardHolderName *string `json:"cardHolderName,omitempty"`
    // CardNumber - The obfuscated credit card number for the credit card, such as xxxxxxxxxxxx1234
    CardNumber *string `json:"cardNumber,omitempty"`
    // ExpirationMonth - The expiration month of the credit card.
    ExpirationMonth *int32 `json:"expirationMonth,omitempty"`
    // ExpirationYear - The expiration year of the credit card.
    ExpirationYear *int32 `json:"expirationYear,omitempty"`
    // BillingAddress - The billing address for the credit card holder.
    BillingAddress *Address `json:"billingAddress,omitempty"`
    // Email - The email address for the credit card holder.
    Email *string `json:"email,omitempty"`
    // CardState - The state that the credit card is in. Possible values include: 'CardStateUnknown', 'CardStateNew', 'CardStateAuthorized', 'CardStateExpired', 'CardStateDeleted', 'CardStateInvalid'
    CardState CardState `json:"cardState,omitempty"`
    // CardType - Gets or sets the type of the card. Possible values include: 'CardTypeUnknown', 'CardTypeVisa', 'CardTypeMasterCard', 'CardTypeAmex', 'CardTypeDiscover'
    CardType CardType `json:"cardType,omitempty"`
    // ReferenceID - The client application provided reference ID for the credit card.
    ReferenceID *string `json:"referenceId,omitempty"`
    // CreatedTime - The timestamp indicating when the credit card was created.
    CreatedTime *date.Time `json:"createdTime,omitempty"`
    // ModifiedTime - The timestamp indicating the last time that the details of the credit card were modified.
    ModifiedTime *date.Time `json:"modifiedTime,omitempty"`
}

// CreditCardRequestModel the request model sent by the client for adding new credit cards to the payment platform.
type CreditCardRequestModel struct {
    // CardNumber - The number on the credit card.
    CardNumber *string `json:"cardNumber,omitempty"`
    // SecurityCode - The security, or CVV code, on the card.
    SecurityCode *string `json:"securityCode,omitempty"`
    // ExpirationMonth - The expiration month of the credit card.
    ExpirationMonth *int32 `json:"expirationMonth,omitempty"`
    // ExpirationYear - The expiration year of the credit card.
    ExpirationYear *int32 `json:"expirationYear,omitempty"`
    // CardHolderName - The name of the cardholder, as it appears on the front of the credit card.
    CardHolderName *string `json:"cardHolderName,omitempty"`
    // BillingAddress - The billing address for the credit card holder..
    BillingAddress *Address `json:"billingAddress,omitempty"`
    // Email - A valid email address for the card holder.
    Email *string `json:"email,omitempty"`
    // ReferenceID - The client application provided reference ID for the credit card.
    ReferenceID *string `json:"referenceId,omitempty"`
    // RedirectURL - The url that the client will be redirected to after the credit card has been created.
    RedirectURL *string `json:"redirectUrl,omitempty"`
}

// CreditCardResponseModel the response model sent to the client when a new credit card is added to the platform.
type CreditCardResponseModel struct {
    autorest.Response `json:"-"`
    // Token - The payment token for the credit card
    Token *string `json:"token,omitempty"`
    // CardState - The state that the credit card is in. Possible values include: 'CardState1Unknown', 'CardState1New', 'CardState1Authorized', 'CardState1Expired', 'CardState1Deleted', 'CardState1Invalid'
    CardState CardState `json:"cardState,omitempty"`
    // Code - The pre-authorization result code.
    Code *string `json:"code,omitempty"`
    // Message - The pre-authorization result message.
    Message *string `json:"message,omitempty"`
    // RedirectURL - The URL that the client will be redirected to after the credit card has been created.
    RedirectURL *string `json:"redirectUrl,omitempty"`
}

// ListBankAccountModel ...
type ListBankAccountModel struct {
    autorest.Response `json:"-"`
    Value *[]BankAccountModel `json:"value,omitempty"`
}

// ListCreditCardModel ...
type ListCreditCardModel struct {
    autorest.Response `json:"-"`
    Value *[]CreditCardModel `json:"value,omitempty"`
}

// ListPaymentModel ...
type ListPaymentModel struct {
    autorest.Response `json:"-"`
    Value *[]PaymentModel `json:"value,omitempty"`
}

// ListRefundResultModel ...
type ListRefundResultModel struct {
    autorest.Response `json:"-"`
    Value *[]RefundResultModel `json:"value,omitempty"`
}

// ListSubscriptionModel ...
type ListSubscriptionModel struct {
    autorest.Response `json:"-"`
    Value *[]SubscriptionModel `json:"value,omitempty"`
}

// PaymentFilter defines a payment filter when requesting a collection of payments
type PaymentFilter struct {
    // ReferenceID - The client application provided reference ID for the payment.
    ReferenceID *string `json:"referenceId,omitempty"`
    // MinDate - The optional lower bound of the range for payment date.
    MinDate *date.Time `json:"minDate,omitempty"`
    // MaxDate - The optional upper bound of the range for payment date.
    MaxDate *date.Time `json:"maxDate,omitempty"`
}

// PaymentMethodModel defines a a funding source for a payment request.
type PaymentMethodModel struct {
    // PaymentToken - The credit card or bank account token that will be used for payment.
    PaymentToken *string `json:"paymentToken,omitempty"`
    // Type - The type of funding source that will be used for the payment. Possible values include: 'Type2Unknown', 'Type2CreditCard', 'Type2ACH'
    Type Type `json:"type,omitempty"`
}

// PaymentModel the model sent to the client requests the details of a payment, or adds a new payment
// to the platform.
type PaymentModel struct {
    autorest.Response `json:"-"`
    // ID - The unique ID of the payment.
    ID *int64 `json:"id,omitempty"`
    // AccountID - The unique ID of the account that the payment was made for.
    AccountID *int32 `json:"accountId,omitempty"`
    // PaymentAmount - The payment amount.
    PaymentAmount *float64 `json:"paymentAmount,omitempty"`
    // Description - The description of what was paid for.
    Description *string `json:"description,omitempty"`
    // ReferenceID - The client application provided reference ID for the payment.
    ReferenceID *string `json:"referenceId,omitempty"`
    // PaymentMethod - The method of payment.
    PaymentMethod *PaymentMethodModel `json:"paymentMethod,omitempty"`
    // Result - The result of the payment request.
    Result *PaymentResultModel `json:"result,omitempty"`
    // Refunds - Gets or sets the refund result.
    Refunds *[]RefundResultModel `json:"refunds,omitempty"`
    // CreatedDate - The timestamp indicating when the payment was created.
    CreatedDate *date.Time `json:"createdDate,omitempty"`
    // ModifiedDate - The timestamp indicating the last time that the details of the payment were modified.
    ModifiedDate *date.Time `json:"modifiedDate,omitempty"`
}

// PaymentRequestModel the request model sent by the client to add a new payment to the platform.
type PaymentRequestModel struct {
    // PaymentAmount - The payment amount.
    PaymentAmount *float64 `json:"paymentAmount,omitempty"`
    // Description - The description of what will be paid for.
    Description *string `json:"description,omitempty"`
    // ReferenceID - The client application provided reference ID for the payment.
    ReferenceID *string `json:"referenceId,omitempty"`
    // PaymentMethod - The method of payment.
    PaymentMethod *PaymentMethodModel `json:"paymentMethod,omitempty"`
    // CallbackURL - The callback URL where payment notifications will be sent.  Payment notifications are sent when the
    //             state of a payment changes.  Notifications will be sent as an HTTP POST to the URL provided and will
    //             contain a PaymentId and optional ReferenceId, if one was provided when the payment was created.
    CallbackURL *string `json:"callbackUrl,omitempty"`
}

// PaymentResultModel the model sent to the client as a part of the payment model.
// Provides details on the payment result.
type PaymentResultModel struct {
    // Status - The current status of the payment. Possible values include: 'StatusUnknown', 'StatusNew', 'StatusAuthorized', 'StatusCaptured', 'StatusExpired', 'StatusDeclined', 'StatusFailed', 'StatusCancelled', 'StatusChargeBack', 'StatusRefunded', 'StatusPartiallyRefunded'
    Status Status `json:"status,omitempty"`
    // Code - The payment result code.
    Code *string `json:"code,omitempty"`
    // Message - The payment result message.
    Message *string `json:"message,omitempty"`
    // ProviderAccountID - The unique ID of the provider account that was used to make this payment.
    ProviderAccountID *string `json:"providerAccountId,omitempty"`
    // MerchantTransactionID - Tthe merchant transaction identifier.
    MerchantTransactionID *string `json:"merchantTransactionId,omitempty"`
    // MerchantTransactionFee - The merchant transaction fee.
    MerchantTransactionFee *float64 `json:"merchantTransactionFee,omitempty"`
}

// RefundRequestModel the request model sent by the client to add a new refund to the platform.
type RefundRequestModel struct {
    // Amount - The amount to be refunded.  If an amount less than the original payment amount is
    //             specified, a partial refund will be processed.  If no amount is specified, a full refund
    //             will be processed.
    Amount *float64 `json:"amount,omitempty"`
    // Reason - The reason for issuing the refund.
    Reason *string `json:"reason,omitempty"`
}

// RefundResultModel the model sent to the client as a part of the payment model.
// Provides details on the refund result.
type RefundResultModel struct {
    autorest.Response `json:"-"`
    // Status - The current status of the refund. Possible values include: 'Status1Unknown', 'Status1New', 'Status1Authorized', 'Status1Captured', 'Status1Expired', 'Status1Declined', 'Status1Failed', 'Status1Cancelled', 'Status1ChargeBack', 'Status1Refunded', 'Status1PartiallyRefunded'
    Status Status `json:"status,omitempty"`
    // Code - The refund result code.
    Code *string `json:"code,omitempty"`
    // Message - The refund result message.
    Message *string `json:"message,omitempty"`
    // MerchantTransactionID - The Merchant Transaction ID number for the payment that is being refunded.
    MerchantTransactionID *string `json:"merchantTransactionId,omitempty"`
    // ProviderAccountID - The unique ID of the provider account that was used to make this refund.
    ProviderAccountID *string `json:"providerAccountId,omitempty"`
    // Amount - The amount to be refunded.  If an amount less than the original payment amount is
    //             specified, a partial refund will be processed.  If no amount is specified, a full refund
    //             will be processed.
    Amount *float64 `json:"amount,omitempty"`
    // Reason - The reason for issuing the refund.
    Reason *string `json:"reason,omitempty"`
    // CreatedDate - The timestamp indicating when the refund was created.
    CreatedDate *date.Time `json:"createdDate,omitempty"`
}

// SetObject ...
type SetObject struct {
    autorest.Response `json:"-"`
    Value *map[string]interface{} `json:"value,omitempty"`
}

// SubscriptionModel the model sent to the client in response to a GET request for a payment subscription.
type SubscriptionModel struct {
    autorest.Response `json:"-"`
    // ID - The id of the payment subscription.
    ID *int32 `json:"id,omitempty"`
    // Name - The name of payment subscription.
    Name *string `json:"name,omitempty"`
    // Description - The description of payment subscription.
    Description *string `json:"description,omitempty"`
    // Properties - The properties of the payment subscription.
    Properties *map[string]*string `json:"properties,omitempty"`
    // RunDay - The process day of the payment subscription.
    RunDay *int32 `json:"runDay,omitempty"`
    // State - The state that payment subscription is in. Possible values include: 'Active', 'Inactive', 'Expired'
    State State `json:"state,omitempty"`
    // PaymentType - The payment type of the payment subscription. Possible values include: 'PaymentTypeUnknown', 'PaymentTypeCreditCard', 'PaymentTypeACH'
    PaymentType PaymentType `json:"paymentType,omitempty"`
    // PaymentToken - The payment token of the payment subscription.
    PaymentToken *string `json:"paymentToken,omitempty"`
    // AmountType - The amount type of the payment subscription. Possible values include: 'Fixed', 'Dynamic'
    AmountType AmountType `json:"amountType,omitempty"`
    // Amount - The amount of money to be charged by the payment subscription.
    Amount *float64 `json:"amount,omitempty"`
    // AmountWebServiceURL - The url of web api to use to retrieve the amount to be charged by the payment subscription.
    AmountWebServiceURL *string `json:"amountWebServiceURL,omitempty"`
    // CallbackWebServiceURL - The url of a web api to use to post back notifications each time payment subscription is processed.
    CallbackWebServiceURL *string `json:"callbackWebServiceURL,omitempty"`
    // ReferenceID - The client application provided reference ID for the credit card.
    ReferenceID *string `json:"referenceId,omitempty"`
    // LastProcessed - The timestamp indicating when the subscription was last processed.
    LastProcessed *date.Time `json:"lastProcessed,omitempty"`
    // EndDate - The date indicating when the payment subscription should be stopped.
    EndDate *date.Time `json:"endDate,omitempty"`
    // CreatedTime - The timestamp indicating when the credit card was created.
    CreatedTime *date.Time `json:"createdTime,omitempty"`
    // ModifiedTime - The timestamp indicating the last time that the details of the credit card were modified.
    ModifiedTime *date.Time `json:"modifiedTime,omitempty"`
}

// SubscriptionRequestModel the request model sent by the client for adding new subscription to the payment platform.
type SubscriptionRequestModel struct {
    // Name - The name of payment subscription.
    Name *string `json:"name,omitempty"`
    // Description - The description of payment subscription.
    Description *string `json:"description,omitempty"`
    // Properties - The properties of the payment subscription.
    Properties *map[string]*string `json:"properties,omitempty"`
    // RunDay - The process day of the payment subscription.
    RunDay *int32 `json:"runDay,omitempty"`
    // State - The state that payment subscription is in. Possible values include: 'State2Active', 'State2Inactive', 'State2Expired'
    State State `json:"state,omitempty"`
    // PaymentType - The payment type of the payment subscription. Possible values include: 'PaymentType1Unknown', 'PaymentType1CreditCard', 'PaymentType1ACH'
    PaymentType PaymentType `json:"paymentType,omitempty"`
    // PaymentToken - The payment token of the payment subscription.
    PaymentToken *string `json:"paymentToken,omitempty"`
    // AmountType - The amount type of the payment subscription. Possible values include: 'AmountType1Fixed', 'AmountType1Dynamic'
    AmountType AmountType `json:"amountType,omitempty"`
    // Amount - The amount of money to be charged by the payment subscription.
    Amount *float64 `json:"amount,omitempty"`
    // AmountWebServiceURL - The url of web api to use to retrieve the amount to be charged by the payment subscription.
    AmountWebServiceURL *string `json:"amountWebServiceURL,omitempty"`
    // CallbackWebServiceURL - The url of a web api to use to post back notifications each time payment subscription is processed.
    CallbackWebServiceURL *string `json:"callbackWebServiceURL,omitempty"`
    // EndDate - The date indicating when the payment subscription should be stopped.
    EndDate *date.Time `json:"endDate,omitempty"`
    // ReferenceID - The client application provided reference ID for the credit card.
    ReferenceID *string `json:"referenceId,omitempty"`
}

// SubscriptionResponceModel the response model that is returned to the client when a new payment subscription is added
// to the platform.
type SubscriptionResponceModel struct {
    autorest.Response `json:"-"`
    // ReferenceID - Gets or sets the reference id.
    ReferenceID *string `json:"referenceId,omitempty"`
    // State - Gets or sets the subscription state. Possible values include: 'State3Active', 'State3Inactive', 'State3Expired'
    State State `json:"state,omitempty"`
}

// UpdateBankAccountModel the request model sent by the client for updating bank accounts in the payment platform.
type UpdateBankAccountModel struct {
    // Token - The payment token for the bank account.
    Token *string `json:"token,omitempty"`
    // Nickname - The aribtrary nickname of the account, used as a way to identify the account.
    Nickname *string `json:"nickname,omitempty"`
    // AccountHolderName - The name of the individual or entity that is autorized to make transactions for the bank account.
    AccountHolderName *string `json:"accountHolderName,omitempty"`
    // AccountHolderAddress - The mailing address for the account holder.
    AccountHolderAddress *Address `json:"accountHolderAddress,omitempty"`
    // Email - The email address for the account holder.
    Email *string `json:"email,omitempty"`
}

// UpdateCreditCardModel the request model sent by the client for updating credit cards in the payment platform.
type UpdateCreditCardModel struct {
    // Token - The payment token for the credit card.
    Token *string `json:"token,omitempty"`
    // ExpirationMonth - The expiration month of the credit card.
    ExpirationMonth *int32 `json:"expirationMonth,omitempty"`
    // ExpirationYear - The expiration year of the credit card.
    ExpirationYear *int32 `json:"expirationYear,omitempty"`
    // CardHolderName - The name of the cardholder, as it appears on the front of the credit card.
    CardHolderName *string `json:"cardHolderName,omitempty"`
    // BillingAddress - The billing address for the credit card holder..
    BillingAddress *Address `json:"billingAddress,omitempty"`
    // Email - A valid email address for the card holder.
    Email *string `json:"email,omitempty"`
}

// UpdateSubscriptionModel the request model sent by the client for updating subscription in the payment platform.
type UpdateSubscriptionModel struct {
    // ID - The id of the payment subscription.
    ID *int32 `json:"id,omitempty"`
    // Name - The name of payment subscription.
    Name *string `json:"name,omitempty"`
    // Description - The description of payment subscription.
    Description *string `json:"description,omitempty"`
    // Properties - The properties of the payment subscription.
    Properties *map[string]*string `json:"properties,omitempty"`
    // RunDay - The process day of the payment subscription.
    RunDay *int32 `json:"runDay,omitempty"`
    // State - The state that payment subscription is in. Possible values include: 'State4Active', 'State4Inactive', 'State4Expired'
    State State `json:"state,omitempty"`
    // PaymentType - The payment type of the payment subscription. Possible values include: 'PaymentType2Unknown', 'PaymentType2CreditCard', 'PaymentType2ACH'
    PaymentType PaymentType `json:"paymentType,omitempty"`
    // PaymentToken - The payment token of the payment subscription.
    PaymentToken *string `json:"paymentToken,omitempty"`
    // AmountType - The amount type of the payment subscription. Possible values include: 'AmountType2Fixed', 'AmountType2Dynamic'
    AmountType AmountType `json:"amountType,omitempty"`
    // Amount - The amount of money to be charged by the payment subscription.
    Amount *float64 `json:"amount,omitempty"`
    // AmountWebServiceURL - The url of web api to use to retrieve the amount to be charged by the payment subscription.
    AmountWebServiceURL *string `json:"amountWebServiceURL,omitempty"`
    // CallbackWebServiceURL - The url of a web api to use to post back notifications each time payment subscription is processed.
    CallbackWebServiceURL *string `json:"callbackWebServiceURL,omitempty"`
    // EndDate - The date indicating when the payment subscription should be stopped.
    EndDate *date.Time `json:"endDate,omitempty"`
    // ReferenceID - The client application provided reference ID for the credit card.
    ReferenceID *string `json:"referenceId,omitempty"`
}

// WalletBankAccountRequestModel wallet Bank Account Request Model
type WalletBankAccountRequestModel struct {
    // PaymentToken - Gets or sets the payment token.
    PaymentToken *string `json:"paymentToken,omitempty"`
    // IsDefault - Gets or sets a value indicating whether this instance is default.
    IsDefault *bool `json:"isDefault,omitempty"`
}

// WalletCreditCardRequestModel wallet credit card request model
type WalletCreditCardRequestModel struct {
    // PaymentToken - Gets or sets the payment token.
    PaymentToken *string `json:"paymentToken,omitempty"`
    // IsDefault - Gets or sets a value indicating whether this instance is default.
    IsDefault *bool `json:"isDefault,omitempty"`
}

// WalletModel wallet Model
type WalletModel struct {
    autorest.Response `json:"-"`
    // ID - Gets or sets the identifier.
    ID *int32 `json:"id,omitempty"`
    // DefaultToken - Gets or sets the default token.
    DefaultToken *string `json:"defaultToken,omitempty"`
    // CreditCards - Gets or sets the credit cards.
    CreditCards *[]CreditCardModel `json:"creditCards,omitempty"`
    // BankAccounts - Gets or sets the bank accounts.
    BankAccounts *[]BankAccountModel `json:"bankAccounts,omitempty"`
}

// WalletRequestModel wallet Request Model
type WalletRequestModel struct {
    // ReferenceID - Gets or sets the reference identifier.
    ReferenceID *string `json:"referenceId,omitempty"`
}

