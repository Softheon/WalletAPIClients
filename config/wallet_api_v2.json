{
  "swagger": "2.0",
  "info": {
    "version": "2",
    "title": "Softheon Wallet API"
  },
  "host": "api-model.softheon.com",
  "basePath": "/payments",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v2/bankaccounts/{token}": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Gets the bank account associated with the specified token.",
        "operationId": "GetBankAccountByToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "The token.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/BankAccountModel"
            },
            "examples": {
              "application/json": {
                "id": 0,
                "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                "accountNumber": "xxxxxxx777",
                "routingNumber": "999999999",
                "type": "Checking",
                "state": "Authorized",
                "nickname": "Citi Checking Account",
                "accountHolderName": "John Doe",
                "accountHolderAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com",
                "referenceId": "bank_account_example",
                "createdTime": "2018-08-09T14:22:32.3979761-04:00",
                "modifiedTime": "2018-08-09T14:22:32.3979761-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "x-ms-examples": {
          "Gets the bank account associated with the specified token.": {
            "parameters": {
              "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1"
            },
            "responses": {
              "200": {
                "body": {
                  "id": 0,
                  "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                  "accountNumber": "xxxxxxx777",
                  "routingNumber": "999999999",
                  "type": "Checking",
                  "state": "Authorized",
                  "nickname": "Citi Checking Account",
                  "accountHolderName": "John Doe",
                  "accountHolderAddress": {
                    "address1": "1500 Stony Brook Road",
                    "address2": "",
                    "city": "Stony Brook",
                    "state": "NY",
                    "zipCode": "11790"
                  },
                  "email": "jdoe@example.com",
                  "referenceId": "bank_account_example",
                  "createdTime": "2018-08-09T14:22:32.3979761-04:00",
                  "modifiedTime": "2018-08-09T14:22:32.3979761-04:00"
                }
              }
            }
          }
        }
      }
    },
    "/v2/bankaccounts": {
      "get": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Gets all bank accounts associated with the specified reference identifier.",
        "operationId": "GetBankAccountsByReferenceId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "referenceId",
            "in": "query",
            "description": "The reference identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BankAccountModel"
              }
            },
            "examples": {
              "application/json": {
                "id": 0,
                "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                "accountNumber": "xxxxxxx777",
                "routingNumber": "999999999",
                "type": "Checking",
                "state": "Authorized",
                "nickname": "Citi Checking Account",
                "accountHolderName": "John Doe",
                "accountHolderAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com",
                "referenceId": "bank_account_example",
                "createdTime": "2018-08-09T14:22:32.3979761-04:00",
                "modifiedTime": "2018-08-09T14:22:32.3979761-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Gets all bank accounts associated with the specified reference identifier.": {
            "parameters": {
              "referenceId": "example_bank_account"
            },
            "responses": {
              "200": {
                "body": {
                  "id": 0,
                  "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                  "accountNumber": "xxxxxxx777",
                  "routingNumber": "999999999",
                  "type": "Checking",
                  "state": "Authorized",
                  "nickname": "Citi Checking Account",
                  "accountHolderName": "John Doe",
                  "accountHolderAddress": {
                    "address1": "1500 Stony Brook Road",
                    "address2": "",
                    "city": "Stony Brook",
                    "state": "NY",
                    "zipCode": "11790"
                  },
                  "email": "jdoe@example.com",
                  "referenceId": "bank_account_example",
                  "createdTime": "2018-08-09T14:22:32.3979761-04:00",
                  "modifiedTime": "2018-08-09T14:22:32.3979761-04:00"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Updates a bank account.",
        "operationId": "UpdateBankAccount",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "updateBankAccountModel",
            "in": "body",
            "description": "The update bank account model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBankAccountModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "examples": {
              "application/json": null
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Updates a bank account.": {
            "parameters": {
              "updateBankAccountModel": {
                "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                "nickname": "Citi Checking Account",
                "accountHolderName": "John Doe",
                "accountHolderAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com"
              }
            },
            "responses": {
              "204": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "BankAccounts"
        ],
        "summary": "Posts a new bank account.",
        "operationId": "CreateBankAccount",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "bankAccountRequest",
            "in": "body",
            "description": "The bank account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BankAccountRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/BankAccountResponseModel"
            },
            "examples": {
              "application/json": {
                "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                "bankAccountState": "New",
                "redirectUrl": "https://api.example.com/v1/bankaccounts/callback/"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Posts a new bank account.": {
            "parameters": {
              "bankAccountRequest": {
                "accountNumber": "7777777777",
                "routingNumber": "999999999",
                "accountHolderName": "John Doe",
                "accountHolderAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "type": "Checking",
                "referenceId": "bank_account_example",
                "nickname": "Citi Checking Account",
                "email": "jdoe@example.com",
                "redirectUrl": "https://api.example.com/v1/bankaccounts/callback/"
              }
            },
            "responses": {
              "200": {
                "body": {
                  "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                  "bankAccountState": "New",
                  "redirectUrl": "https://api.example.com/v1/bankaccounts/callback/"
                }
              }
            }
          }
        }
      }
    },
    "/v2/bins": {
      "post": {
        "tags": [
          "Bins"
        ],
        "summary": "Gets the bin information for a specified credit card number.",
        "operationId": "GetBin",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "binRequest",
            "in": "body",
            "description": "The bin request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BinRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Bin"
            },
            "examples": {
              "application/json": {
                "bin": "411111",
                "brand": "Visa",
                "isDebitCard": false,
                "isCheckCard": true,
                "isGiftCard": false,
                "isCorporateCard": false,
                "isFleetCard": false,
                "isPrepaidCard": false
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "x-ms-examples": {
          "Gets the bin information for a specified credit card number.": {
            "parameters": {
              "binRequest": {
                "cardNumber": "4111113956134018"
              }
            },
            "responses": {
              "200": {
                "body": {
                  "bin": "411111",
                  "brand": "Visa",
                  "isDebitCard": false,
                  "isCheckCard": true,
                  "isGiftCard": false,
                  "isCorporateCard": false,
                  "isFleetCard": false,
                  "isPrepaidCard": false
                }
              }
            }
          }
        }
      }
    },
    "/v2/checkouts": {
      "get": {
        "tags": [
          "Checkout"
        ],
        "summary": "Gets the checkout.",
        "operationId": "GetCheckout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "checkoutId",
            "in": "query",
            "description": "The checkout identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CheckoutResponseModel"
            },
            "examples": {
              "application/json": {
                "checkoutId": 1152,
                "clientId": "OTQ0MGYxODgtOGJiNy00MTFmLWJmMzctOTBkMzI4ZGY4ZTRh",
                "redirectUrl": "https://api.example.com/v1/checkout/callback/",
                "referenceId": "52474662",
                "amount": 100.32,
                "nameOnAccount": "John Doe",
                "expirationDate": "2018-08-09T21:22:32.4292275Z",
                "enableBillingInformation": true,
                "billingAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com",
                "requireEmail": true,
                "enableSaveOption": true
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "x-ms-examples": {
          "Gets the checkout.": {
            "parameters": {
              "checkoutId": 1152
            },
            "responses": {
              "200": {
                "body": {
                  "checkoutId": 1152,
                  "clientId": "OTQ0MGYxODgtOGJiNy00MTFmLWJmMzctOTBkMzI4ZGY4ZTRh",
                  "redirectUrl": "https://api.example.com/v1/checkout/callback/",
                  "referenceId": "52474662",
                  "amount": 100.32,
                  "nameOnAccount": "John Doe",
                  "expirationDate": "2018-08-09T21:22:32.4292275Z",
                  "enableBillingInformation": true,
                  "billingAddress": {
                    "address1": "1500 Stony Brook Road",
                    "address2": "",
                    "city": "Stony Brook",
                    "state": "NY",
                    "zipCode": "11790"
                  },
                  "email": "jdoe@example.com",
                  "requireEmail": true,
                  "enableSaveOption": true
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Posts the specified model.",
        "operationId": "CreateCheckout",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckoutRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CheckoutResponseModel"
            },
            "examples": {
              "application/json": {
                "checkoutId": 1152,
                "clientId": "OTQ0MGYxODgtOGJiNy00MTFmLWJmMzctOTBkMzI4ZGY4ZTRh",
                "redirectUrl": "https://api.example.com/v1/checkout/callback/",
                "referenceId": "52474662",
                "amount": 100.32,
                "nameOnAccount": "John Doe",
                "expirationDate": "2018-08-09T21:22:32.4292275Z",
                "enableBillingInformation": true,
                "billingAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com",
                "requireEmail": true,
                "enableSaveOption": true
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Posts the specified model.": {
            "parameters": {
              "model": {
                "redirectUrl": "https://api.example.com/v1/checkout/callback/",
                "referenceId": "52474662",
                "amount": 100.32,
                "nameOnAccount": "John Doe",
                "expirationDate": "2018-08-09T21:22:32.4292275Z",
                "enableBillingInformation": true,
                "billingAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com",
                "requireEmail": true,
                "enableSaveOption": true
              }
            },
            "responses": {
              "201": {
                "body": {
                  "checkoutId": 1152,
                  "clientId": "OTQ0MGYxODgtOGJiNy00MTFmLWJmMzctOTBkMzI4ZGY4ZTRh",
                  "redirectUrl": "https://api.example.com/v1/checkout/callback/",
                  "referenceId": "52474662",
                  "amount": 100.32,
                  "nameOnAccount": "John Doe",
                  "expirationDate": "2018-08-09T21:22:32.4292275Z",
                  "enableBillingInformation": true,
                  "billingAddress": {
                    "address1": "1500 Stony Brook Road",
                    "address2": "",
                    "city": "Stony Brook",
                    "state": "NY",
                    "zipCode": "11790"
                  },
                  "email": "jdoe@example.com",
                  "requireEmail": true,
                  "enableSaveOption": true
                }
              }
            }
          }
        }
      }
    },
    "/v2/creditcards": {
      "get": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Gets all credit cards associated with the specified reference identifier.",
        "operationId": "GetCreditCardsByReferenceId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "referenceId",
            "in": "query",
            "description": "The reference identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreditCardModel"
              }
            },
            "examples": {
              "application/json": {
                "id": 0,
                "token": "0363077379044018",
                "cardHolderName": "John Doe",
                "cardNumber": "xxxxxxxxxxxx4018",
                "expirationMonth": 11,
                "expirationYear": 2017,
                "billingAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com",
                "cardState": "Authorized",
                "cardType": "Visa",
                "referenceId": "credit_card_example",
                "createdTime": "2018-08-09T14:22:32.4292275-04:00",
                "modifiedTime": "2018-08-09T14:22:32.4292275-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Gets all credit cards associated with the specified reference identifier.": {
            "parameters": {
              "referenceId": "credit_card_example"
            },
            "responses": {
              "200": {
                "body": {
                  "id": 0,
                  "token": "0363077379044018",
                  "cardHolderName": "John Doe",
                  "cardNumber": "xxxxxxxxxxxx4018",
                  "expirationMonth": 11,
                  "expirationYear": 2017,
                  "billingAddress": {
                    "address1": "1500 Stony Brook Road",
                    "address2": "",
                    "city": "Stony Brook",
                    "state": "NY",
                    "zipCode": "11790"
                  },
                  "email": "jdoe@example.com",
                  "cardState": "Authorized",
                  "cardType": "Visa",
                  "referenceId": "credit_card_example",
                  "createdTime": "2018-08-09T14:22:32.4292275-04:00",
                  "modifiedTime": "2018-08-09T14:22:32.4292275-04:00"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Updates a credit card.",
        "operationId": "UpdateCreditCard",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "updateCreditCardModel",
            "in": "body",
            "description": "The update credit card model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCreditCardModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "examples": {
              "application/json": null
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Updates a credit card.": {
            "parameters": {
              "updateCreditCardModel": {
                "token": "0363077379044018",
                "expirationMonth": 11,
                "expirationYear": 2017,
                "cardHolderName": "John Doe",
                "billingAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com"
              }
            },
            "responses": {
              "204": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditCards"
        ],
        "summary": "Posts a new credit card.",
        "operationId": "CreateCreditCard",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "creditCardRequest",
            "in": "body",
            "description": "The new credit card.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreditCardRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CreditCardResponseModel"
            },
            "examples": {
              "application/json": {
                "token": "0363077379044018",
                "cardState": "Authorized",
                "code": "FMS000",
                "message": "Success",
                "redirectUrl": "https://api.example.com/v1/creditcards/callback/"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Posts a new credit card.": {
            "parameters": {
              "creditCardRequest": {
                "cardNumber": "4111113956134018",
                "securityCode": "123",
                "expirationMonth": 11,
                "expirationYear": 2017,
                "cardHolderName": "John Doe",
                "billingAddress": {
                  "address1": "1500 Stony Brook Road",
                  "address2": "",
                  "city": "Stony Brook",
                  "state": "NY",
                  "zipCode": "11790"
                },
                "email": "jdoe@example.com",
                "referenceId": "credit_card_example",
                "redirectUrl": "https://api.example.com/v1/creditcards/callback/"
              }
            },
            "responses": {
              "200": {
                "body": {
                  "token": "0363077379044018",
                  "cardState": "Authorized",
                  "code": "FMS000",
                  "message": "Success",
                  "redirectUrl": "https://api.example.com/v1/creditcards/callback/"
                }
              }
            }
          }
        }
      }
    },
    "/v2/payments/{id}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Gets the specified payment by its identifier.",
        "operationId": "GetPayment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The payment identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/PaymentModel"
            },
            "examples": {
              "application/json": {
                "id": 371975,
                "accountId": 2,
                "paymentAmount": 100.32,
                "description": "Payment of balance due",
                "referenceId": "example_payment",
                "paymentMethod": {
                  "paymentToken": "9439061618674018",
                  "type": "Credit Card"
                },
                "result": {
                  "status": "Refunded",
                  "code": "FMS200",
                  "message": "Payment fully refunded.",
                  "providerAccountId": "01264098",
                  "merchantTransactionId": "134557252146764000",
                  "merchantTransactionFee": 2.96
                },
                "refunds": [
                  {
                    "status": "Authorized",
                    "code": "FMS000",
                    "message": "Success",
                    "merchantTransactionId": "390571794477037000",
                    "providerAccountId": "01264098",
                    "amount": 100.32,
                    "reason": "Payment in error",
                    "createdDate": "2018-08-09T14:22:32.4761046-04:00"
                  }
                ],
                "createdDate": "2018-07-30T14:22:32.4761046-04:00",
                "modifiedDate": "2018-08-09T14:22:32.4761046-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "x-ms-examples": {
          "Gets the specified payment by its identifier.": {
            "parameters": {
              "id": 371375
            },
            "responses": {
              "200": {
                "body": {
                  "id": 371975,
                  "accountId": 2,
                  "paymentAmount": 100.32,
                  "description": "Payment of balance due",
                  "referenceId": "example_payment",
                  "paymentMethod": {
                    "paymentToken": "9439061618674018",
                    "type": "Credit Card"
                  },
                  "result": {
                    "status": "Refunded",
                    "code": "FMS200",
                    "message": "Payment fully refunded.",
                    "providerAccountId": "01264098",
                    "merchantTransactionId": "134557252146764000",
                    "merchantTransactionFee": 2.96
                  },
                  "refunds": [
                    {
                      "status": "Authorized",
                      "code": "FMS000",
                      "message": "Success",
                      "merchantTransactionId": "390571794477037000",
                      "providerAccountId": "01264098",
                      "amount": 100.32,
                      "reason": "Payment in error",
                      "createdDate": "2018-08-09T14:22:32.4761046-04:00"
                    }
                  ],
                  "createdDate": "2018-07-30T14:22:32.4761046-04:00",
                  "modifiedDate": "2018-08-09T14:22:32.4761046-04:00"
                }
              }
            }
          }
        }
      }
    },
    "/v2/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Gets payments associated with the specified reference identifier.",
        "operationId": "GetPaymentsByReferenceId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "referenceId",
            "in": "query",
            "description": "Gets or sets the reference identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "minDate",
            "in": "query",
            "description": "Gets or sets the minimum date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "maxDate",
            "in": "query",
            "description": "Gets or sets the maximum date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentModel"
              }
            },
            "examples": {
              "application/json": {
                "id": 371975,
                "accountId": 2,
                "paymentAmount": 100.32,
                "description": "Payment of balance due",
                "referenceId": "example_payment",
                "paymentMethod": {
                  "paymentToken": "9439061618674018",
                  "type": "Credit Card"
                },
                "result": {
                  "status": "Refunded",
                  "code": "FMS200",
                  "message": "Payment fully refunded.",
                  "providerAccountId": "01264098",
                  "merchantTransactionId": "134557252146764000",
                  "merchantTransactionFee": 2.96
                },
                "refunds": [
                  {
                    "status": "Authorized",
                    "code": "FMS000",
                    "message": "Success",
                    "merchantTransactionId": "390571794477037000",
                    "providerAccountId": "01264098",
                    "amount": 100.32,
                    "reason": "Payment in error",
                    "createdDate": "2018-08-09T14:22:32.4761046-04:00"
                  }
                ],
                "createdDate": "2018-07-30T14:22:32.4761046-04:00",
                "modifiedDate": "2018-08-09T14:22:32.4761046-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Gets payments associated with the specified reference identifier.": {
            "parameters": {
              "referenceId": "credit_card_example",
              "minDate": "2014-06-09T00:00:00-04:00",
              "maxDate": "2018-08-09T00:00:00-04:00"
            },
            "responses": {
              "200": {
                "body": {
                  "id": 371975,
                  "accountId": 2,
                  "paymentAmount": 100.32,
                  "description": "Payment of balance due",
                  "referenceId": "example_payment",
                  "paymentMethod": {
                    "paymentToken": "9439061618674018",
                    "type": "Credit Card"
                  },
                  "result": {
                    "status": "Refunded",
                    "code": "FMS200",
                    "message": "Payment fully refunded.",
                    "providerAccountId": "01264098",
                    "merchantTransactionId": "134557252146764000",
                    "merchantTransactionFee": 2.96
                  },
                  "refunds": [
                    {
                      "status": "Authorized",
                      "code": "FMS000",
                      "message": "Success",
                      "merchantTransactionId": "390571794477037000",
                      "providerAccountId": "01264098",
                      "amount": 100.32,
                      "reason": "Payment in error",
                      "createdDate": "2018-08-09T14:22:32.4761046-04:00"
                    }
                  ],
                  "createdDate": "2018-07-30T14:22:32.4761046-04:00",
                  "modifiedDate": "2018-08-09T14:22:32.4761046-04:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Posts a new payment.",
        "operationId": "CreatePayment",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "paymentRequest",
            "in": "body",
            "description": "The new payment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PaymentModel"
            },
            "examples": {
              "application/json": {
                "id": 371975,
                "accountId": 2,
                "paymentAmount": 100.32,
                "description": "Payment of balance due",
                "referenceId": "example_payment",
                "paymentMethod": {
                  "paymentToken": "9439061618674018",
                  "type": "Credit Card"
                },
                "result": {
                  "status": "Authorized",
                  "code": "FMS000",
                  "message": "Success",
                  "providerAccountId": "01264098",
                  "merchantTransactionId": "134557252146764000",
                  "merchantTransactionFee": 2.96
                },
                "createdDate": "2018-08-09T14:22:32.4761046-04:00",
                "modifiedDate": "2018-08-09T14:22:32.4761046-04:00"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Posts a new payment.": {
            "parameters": {
              "paymentRequest": {
                "id": 371975,
                "accountId": 2,
                "paymentAmount": 100.32,
                "description": "Payment of balance due",
                "referenceId": "example_payment",
                "paymentMethod": {
                  "paymentToken": "9439061618674018",
                  "type": "Credit Card"
                },
                "result": {
                  "status": "Authorized",
                  "code": "FMS000",
                  "message": "Success",
                  "providerAccountId": "01264098",
                  "merchantTransactionId": "134557252146764000",
                  "merchantTransactionFee": 2.96
                },
                "createdDate": "2018-08-09T14:22:32.4917303-04:00",
                "modifiedDate": "2018-08-09T14:22:32.4917303-04:00"
              }
            },
            "responses": {
              "201": {
                "body": {
                  "id": 371975,
                  "accountId": 2,
                  "paymentAmount": 100.32,
                  "description": "Payment of balance due",
                  "referenceId": "example_payment",
                  "paymentMethod": {
                    "paymentToken": "9439061618674018",
                    "type": "Credit Card"
                  },
                  "result": {
                    "status": "Authorized",
                    "code": "FMS000",
                    "message": "Success",
                    "providerAccountId": "01264098",
                    "merchantTransactionId": "134557252146764000",
                    "merchantTransactionFee": 2.96
                  },
                  "createdDate": "2018-08-09T14:22:32.4917303-04:00",
                  "modifiedDate": "2018-08-09T14:22:32.4917303-04:00"
                }
              }
            }
          }
        }
      }
    },
    "/v2/payments/{id}/refunds": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "summary": "Gets the refunds associated with the specified payment.",
        "operationId": "GetRefunds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RefundResultModel"
              }
            },
            "examples": {
              "application/json": {
                "status": "Authorized",
                "code": "FMS000",
                "message": "Success",
                "merchantTransactionId": "390571794477037000",
                "providerAccountId": "01264098",
                "amount": 100.32,
                "reason": "Payment in error",
                "createdDate": "2018-08-09T14:22:32.4917303-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Gets the refunds associated with the specified payment.": {
            "parameters": {
              "id": 371975
            },
            "responses": {
              "200": {
                "body": {
                  "status": "Authorized",
                  "code": "FMS000",
                  "message": "Success",
                  "merchantTransactionId": "390571794477037000",
                  "providerAccountId": "01264098",
                  "amount": 100.32,
                  "reason": "Payment in error",
                  "createdDate": "2018-08-09T14:22:32.4917303-04:00"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Refunds"
        ],
        "summary": "Posts a new refund request.",
        "operationId": "CreateRefund",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the payment to be refunded.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "refundRequestModel",
            "in": "body",
            "description": "The refund model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefundRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/RefundResultModel"
            },
            "examples": {
              "application/json": {
                "status": "Authorized",
                "code": "FMS000",
                "message": "Success",
                "merchantTransactionId": "390571794477037000",
                "providerAccountId": "01264098",
                "amount": 100.32,
                "reason": "Payment in error",
                "createdDate": "2018-08-09T14:22:32.4917303-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "x-ms-examples": {
          "Posts a new refund request.": {
            "parameters": {
              "refundRequestModel": {
                "amount": 27.5,
                "reason": "Refund for overpayment."
              },
              "id": 371975
            },
            "responses": {
              "200": {
                "body": {
                  "status": "Authorized",
                  "code": "FMS000",
                  "message": "Success",
                  "merchantTransactionId": "390571794477037000",
                  "providerAccountId": "01264098",
                  "amount": 100.32,
                  "reason": "Payment in error",
                  "createdDate": "2018-08-09T14:22:32.4917303-04:00"
                }
              }
            }
          }
        }
      }
    },
    "/v2/subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Gets a single payment subscription with the specified subscription id.",
        "operationId": "GetSubscription",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The subscription id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/SubscriptionModel"
            },
            "examples": {
              "application/json": {
                "id": 61718,
                "name": "Example Autopay",
                "description": "An example of the subscription schema",
                "properties": {
                  "prop1": "value1",
                  "prop2": "value2"
                },
                "runDay": 15,
                "state": "Active",
                "paymentType": "Credit Card",
                "paymentToken": "0649178444111000",
                "amountType": "Dynamic",
                "amountWebServiceURL": "https://api.example.com/members/1234/balance",
                "callbackWebServiceURL": "https://api.example.com/v1/subscriptions/callback/",
                "referenceId": "example_subscription",
                "lastProcessed": "2018-07-10T14:22:32.4917303-04:00",
                "createdTime": "2018-05-11T14:22:32.4917303-04:00",
                "modifiedTime": "2018-07-10T14:22:32.4917303-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "x-ms-examples": {
          "Gets a single payment subscription with the specified subscription id.": {
            "parameters": {
              "id": 61718
            },
            "responses": {
              "200": {
                "body": {
                  "id": 61718,
                  "name": "Example Autopay",
                  "description": "An example of the subscription schema",
                  "properties": {
                    "prop1": "value1",
                    "prop2": "value2"
                  },
                  "runDay": 15,
                  "state": "Active",
                  "paymentType": "Credit Card",
                  "paymentToken": "0649178444111000",
                  "amountType": "Dynamic",
                  "amountWebServiceURL": "https://api.example.com/members/1234/balance",
                  "callbackWebServiceURL": "https://api.example.com/v1/subscriptions/callback/",
                  "referenceId": "example_subscription",
                  "lastProcessed": "2018-07-10T14:22:32.4917303-04:00",
                  "createdTime": "2018-05-11T14:22:32.4917303-04:00",
                  "modifiedTime": "2018-07-10T14:22:32.4917303-04:00"
                }
              }
            }
          }
        }
      }
    },
    "/v2/subscriptions": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "summary": "Gets all payment subscriptions associated with the specified reference id.",
        "operationId": "GetSubscriptionsByReferenceId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "referenceId",
            "in": "query",
            "description": "The reference identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubscriptionModel"
              }
            },
            "examples": {
              "application/json": {
                "id": 61718,
                "name": "Example Autopay",
                "description": "An example of the subscription schema",
                "properties": {
                  "prop1": "value1",
                  "prop2": "value2"
                },
                "runDay": 15,
                "state": "Active",
                "paymentType": "Credit Card",
                "paymentToken": "0649178444111000",
                "amountType": "Dynamic",
                "amountWebServiceURL": "https://api.example.com/members/1234/balance",
                "callbackWebServiceURL": "https://api.example.com/v1/subscriptions/callback/",
                "referenceId": "example_subscription",
                "lastProcessed": "2018-07-10T14:22:32.4917303-04:00",
                "createdTime": "2018-05-11T14:22:32.4917303-04:00",
                "modifiedTime": "2018-07-10T14:22:32.4917303-04:00"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Gets all payment subscriptions associated with the specified reference id.": {
            "parameters": {
              "referenceId": "example_subscription"
            },
            "responses": {
              "200": {
                "body": {
                  "id": 61718,
                  "name": "Example Autopay",
                  "description": "An example of the subscription schema",
                  "properties": {
                    "prop1": "value1",
                    "prop2": "value2"
                  },
                  "runDay": 15,
                  "state": "Active",
                  "paymentType": "Credit Card",
                  "paymentToken": "0649178444111000",
                  "amountType": "Dynamic",
                  "amountWebServiceURL": "https://api.example.com/members/1234/balance",
                  "callbackWebServiceURL": "https://api.example.com/v1/subscriptions/callback/",
                  "referenceId": "example_subscription",
                  "lastProcessed": "2018-07-10T14:22:32.4917303-04:00",
                  "createdTime": "2018-05-11T14:22:32.4917303-04:00",
                  "modifiedTime": "2018-07-10T14:22:32.4917303-04:00"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscription"
        ],
        "summary": "Updates a payment subscription.",
        "operationId": "UpdateSubscription",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "updateSubscriptionModel",
            "in": "body",
            "description": "The update subscription model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSubscriptionModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent",
            "examples": {
              "application/json": null
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Updates a payment subscription.": {
            "parameters": {
              "updateSubscriptionModel": {
                "id": 61718,
                "name": "Example Autopay",
                "description": "An example of the subscription schema",
                "properties": {
                  "prop1": "value1",
                  "prop2": "value2"
                },
                "runDay": 15,
                "state": "Active",
                "paymentType": "Credit Card",
                "paymentToken": "0649178444111000",
                "amountType": "Dynamic",
                "amountWebServiceURL": "https://api.example.com/members/1234/balance",
                "callbackWebServiceURL": "https://api.example.com/v1/subscriptions/callback/",
                "endDate": "2019-08-09T14:22:32.507356-04:00",
                "referenceId": "example_subscription"
              }
            },
            "responses": {
              "204": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Posts a new payment subscription.",
        "operationId": "CreateSubscription",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionRequest",
            "in": "body",
            "description": "The subscription request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponseModel"
            },
            "examples": {
              "application/json": {
                "referenceId": "example_subscription",
                "state": "Active"
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "x-ms-examples": {
          "Posts a new payment subscription.": {
            "parameters": {
              "subscriptionRequest": {
                "name": "Example Autopay",
                "description": "An example of the subscription schema",
                "properties": {
                  "prop1": "value1",
                  "prop2": "value2"
                },
                "runDay": 15,
                "state": "Active",
                "paymentType": "Credit Card",
                "paymentToken": "0649178444111000",
                "amountType": "Dynamic",
                "amountWebServiceURL": "https://api.example.com/members/1234/balance",
                "callbackWebServiceURL": "https://api.example.com/v1/subscriptions/callback/",
                "endDate": "2019-08-09T14:22:32.5229817-04:00",
                "referenceId": "example_subscription"
              }
            },
            "responses": {
              "200": {
                "body": {
                  "referenceId": "example_subscription",
                  "state": "Active"
                }
              }
            }
          }
        }
      }
    },
    "/v2/wallet/{walletId}": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Gets the wallet by wallet ID",
        "operationId": "GetWallet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "description": "The wallet identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/WalletModel"
            },
            "examples": {
              "application/json": {
                "id": 25332,
                "defaultToken": "0363077379044018",
                "creditCards": [
                  {
                    "id": 0,
                    "token": "0363077379044018",
                    "cardHolderName": "John Doe",
                    "cardNumber": "xxxxxxxxxxxx4018",
                    "expirationMonth": 11,
                    "expirationYear": 2017,
                    "billingAddress": {
                      "address1": "1500 Stony Brook Road",
                      "address2": "",
                      "city": "Stony Brook",
                      "state": "NY",
                      "zipCode": "11790"
                    },
                    "email": "jdoe@example.com",
                    "cardState": "Authorized",
                    "cardType": "Visa",
                    "referenceId": "credit_card_example",
                    "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                    "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                  }
                ],
                "bankAccounts": [
                  {
                    "id": 0,
                    "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                    "accountNumber": "xxxxxxx777",
                    "routingNumber": "999999999",
                    "type": "Checking",
                    "state": "Authorized",
                    "nickname": "Citi Checking Account",
                    "accountHolderName": "John Doe",
                    "accountHolderAddress": {
                      "address1": "1500 Stony Brook Road",
                      "address2": "",
                      "city": "Stony Brook",
                      "state": "NY",
                      "zipCode": "11790"
                    },
                    "email": "jdoe@example.com",
                    "referenceId": "bank_account_example",
                    "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                    "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          }
        },
        "x-ms-examples": {
          "Gets the wallet by wallet ID": {
            "parameters": {
              "walletId": 25332
            },
            "responses": {
              "200": {
                "body": {
                  "id": 25332,
                  "defaultToken": "0363077379044018",
                  "creditCards": [
                    {
                      "id": 0,
                      "token": "0363077379044018",
                      "cardHolderName": "John Doe",
                      "cardNumber": "xxxxxxxxxxxx4018",
                      "expirationMonth": 11,
                      "expirationYear": 2017,
                      "billingAddress": {
                        "address1": "1500 Stony Brook Road",
                        "address2": "",
                        "city": "Stony Brook",
                        "state": "NY",
                        "zipCode": "11790"
                      },
                      "email": "jdoe@example.com",
                      "cardState": "Authorized",
                      "cardType": "Visa",
                      "referenceId": "credit_card_example",
                      "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                      "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                    }
                  ],
                  "bankAccounts": [
                    {
                      "id": 0,
                      "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                      "accountNumber": "xxxxxxx777",
                      "routingNumber": "999999999",
                      "type": "Checking",
                      "state": "Authorized",
                      "nickname": "Citi Checking Account",
                      "accountHolderName": "John Doe",
                      "accountHolderAddress": {
                        "address1": "1500 Stony Brook Road",
                        "address2": "",
                        "city": "Stony Brook",
                        "state": "NY",
                        "zipCode": "11790"
                      },
                      "email": "jdoe@example.com",
                      "referenceId": "bank_account_example",
                      "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                      "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Wallet"
        ],
        "summary": "Puts the wallet.",
        "operationId": "UpdateWallet",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "description": "The wallet identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "defaultPaymentToken",
            "in": "body",
            "description": "The default payment token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": null
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Puts the wallet.": {
            "parameters": {
              "defaultPaymentToken": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
              "walletId": 25332
            },
            "responses": {
              "200": {}
            }
          }
        }
      }
    },
    "/v2/wallet": {
      "get": {
        "tags": [
          "Wallet"
        ],
        "summary": "Gets the wallet by reference ID",
        "operationId": "GetWalletByReferenceId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "referenceId",
            "in": "query",
            "description": "The reference identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/WalletModel"
            },
            "examples": {
              "application/json": {
                "id": 25332,
                "defaultToken": "0363077379044018",
                "creditCards": [
                  {
                    "id": 0,
                    "token": "0363077379044018",
                    "cardHolderName": "John Doe",
                    "cardNumber": "xxxxxxxxxxxx4018",
                    "expirationMonth": 11,
                    "expirationYear": 2017,
                    "billingAddress": {
                      "address1": "1500 Stony Brook Road",
                      "address2": "",
                      "city": "Stony Brook",
                      "state": "NY",
                      "zipCode": "11790"
                    },
                    "email": "jdoe@example.com",
                    "cardState": "Authorized",
                    "cardType": "Visa",
                    "referenceId": "credit_card_example",
                    "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                    "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                  }
                ],
                "bankAccounts": [
                  {
                    "id": 0,
                    "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                    "accountNumber": "xxxxxxx777",
                    "routingNumber": "999999999",
                    "type": "Checking",
                    "state": "Authorized",
                    "nickname": "Citi Checking Account",
                    "accountHolderName": "John Doe",
                    "accountHolderAddress": {
                      "address1": "1500 Stony Brook Road",
                      "address2": "",
                      "city": "Stony Brook",
                      "state": "NY",
                      "zipCode": "11790"
                    },
                    "email": "jdoe@example.com",
                    "referenceId": "bank_account_example",
                    "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                    "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Gets the wallet by reference ID": {
            "parameters": {
              "referenceId": "example_wallet"
            },
            "responses": {
              "200": {
                "body": {
                  "id": 25332,
                  "defaultToken": "0363077379044018",
                  "creditCards": [
                    {
                      "id": 0,
                      "token": "0363077379044018",
                      "cardHolderName": "John Doe",
                      "cardNumber": "xxxxxxxxxxxx4018",
                      "expirationMonth": 11,
                      "expirationYear": 2017,
                      "billingAddress": {
                        "address1": "1500 Stony Brook Road",
                        "address2": "",
                        "city": "Stony Brook",
                        "state": "NY",
                        "zipCode": "11790"
                      },
                      "email": "jdoe@example.com",
                      "cardState": "Authorized",
                      "cardType": "Visa",
                      "referenceId": "credit_card_example",
                      "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                      "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                    }
                  ],
                  "bankAccounts": [
                    {
                      "id": 0,
                      "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                      "accountNumber": "xxxxxxx777",
                      "routingNumber": "999999999",
                      "type": "Checking",
                      "state": "Authorized",
                      "nickname": "Citi Checking Account",
                      "accountHolderName": "John Doe",
                      "accountHolderAddress": {
                        "address1": "1500 Stony Brook Road",
                        "address2": "",
                        "city": "Stony Brook",
                        "state": "NY",
                        "zipCode": "11790"
                      },
                      "email": "jdoe@example.com",
                      "referenceId": "bank_account_example",
                      "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                      "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Creates a new empty wallet",
        "operationId": "CreateWallet",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "The model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WalletRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "examples": {
              "application/json": 25332
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Creates a new empty wallet": {
            "parameters": {
              "model": {
                "referenceId": "wallet_example"
              }
            },
            "responses": {
              "200": {
                "body": 25332
              }
            }
          }
        }
      }
    },
    "/v2/wallet/{walletId}/CreditCard": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Adds a new credit card to the wallet",
        "operationId": "AddWalletCreditCard",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "description": "The wallet identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WalletCreditCardRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/WalletModel"
            },
            "examples": {
              "application/json": {
                "id": 25332,
                "defaultToken": "0363077379044018",
                "creditCards": [
                  {
                    "id": 0,
                    "token": "0363077379044018",
                    "cardHolderName": "John Doe",
                    "cardNumber": "xxxxxxxxxxxx4018",
                    "expirationMonth": 11,
                    "expirationYear": 2017,
                    "billingAddress": {
                      "address1": "1500 Stony Brook Road",
                      "address2": "",
                      "city": "Stony Brook",
                      "state": "NY",
                      "zipCode": "11790"
                    },
                    "email": "jdoe@example.com",
                    "cardState": "Authorized",
                    "cardType": "Visa",
                    "referenceId": "credit_card_example",
                    "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                    "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                  }
                ],
                "bankAccounts": [
                  {
                    "id": 0,
                    "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                    "accountNumber": "xxxxxxx777",
                    "routingNumber": "999999999",
                    "type": "Checking",
                    "state": "Authorized",
                    "nickname": "Citi Checking Account",
                    "accountHolderName": "John Doe",
                    "accountHolderAddress": {
                      "address1": "1500 Stony Brook Road",
                      "address2": "",
                      "city": "Stony Brook",
                      "state": "NY",
                      "zipCode": "11790"
                    },
                    "email": "jdoe@example.com",
                    "referenceId": "bank_account_example",
                    "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                    "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Adds a new credit card to the wallet": {
            "parameters": {
              "request": {
                "paymentToken": "0363077379044018",
                "isDefault": true
              },
              "walletId": 25332
            },
            "responses": {
              "200": {
                "body": {
                  "id": 25332,
                  "defaultToken": "0363077379044018",
                  "creditCards": [
                    {
                      "id": 0,
                      "token": "0363077379044018",
                      "cardHolderName": "John Doe",
                      "cardNumber": "xxxxxxxxxxxx4018",
                      "expirationMonth": 11,
                      "expirationYear": 2017,
                      "billingAddress": {
                        "address1": "1500 Stony Brook Road",
                        "address2": "",
                        "city": "Stony Brook",
                        "state": "NY",
                        "zipCode": "11790"
                      },
                      "email": "jdoe@example.com",
                      "cardState": "Authorized",
                      "cardType": "Visa",
                      "referenceId": "credit_card_example",
                      "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                      "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                    }
                  ],
                  "bankAccounts": [
                    {
                      "id": 0,
                      "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                      "accountNumber": "xxxxxxx777",
                      "routingNumber": "999999999",
                      "type": "Checking",
                      "state": "Authorized",
                      "nickname": "Citi Checking Account",
                      "accountHolderName": "John Doe",
                      "accountHolderAddress": {
                        "address1": "1500 Stony Brook Road",
                        "address2": "",
                        "city": "Stony Brook",
                        "state": "NY",
                        "zipCode": "11790"
                      },
                      "email": "jdoe@example.com",
                      "referenceId": "bank_account_example",
                      "createdTime": "2018-08-09T14:22:32.5229817-04:00",
                      "modifiedTime": "2018-08-09T14:22:32.5229817-04:00"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/wallet/{walletId}/BankAccount": {
      "post": {
        "tags": [
          "Wallet"
        ],
        "summary": "Adds a new bank account to the wallet",
        "operationId": "AddWalletBankAccount",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "description": "The wallet identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WalletBankAccountRequestModel"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/WalletModel"
            },
            "examples": {
              "application/json": {
                "id": 25332,
                "defaultToken": "0363077379044018",
                "creditCards": [
                  {
                    "id": 0,
                    "token": "0363077379044018",
                    "cardHolderName": "John Doe",
                    "cardNumber": "xxxxxxxxxxxx4018",
                    "expirationMonth": 11,
                    "expirationYear": 2017,
                    "billingAddress": {
                      "address1": "1500 Stony Brook Road",
                      "address2": "",
                      "city": "Stony Brook",
                      "state": "NY",
                      "zipCode": "11790"
                    },
                    "email": "jdoe@example.com",
                    "cardState": "Authorized",
                    "cardType": "Visa",
                    "referenceId": "credit_card_example",
                    "createdTime": "2018-08-09T14:22:32.5386074-04:00",
                    "modifiedTime": "2018-08-09T14:22:32.5386074-04:00"
                  }
                ],
                "bankAccounts": [
                  {
                    "id": 0,
                    "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                    "accountNumber": "xxxxxxx777",
                    "routingNumber": "999999999",
                    "type": "Checking",
                    "state": "Authorized",
                    "nickname": "Citi Checking Account",
                    "accountHolderName": "John Doe",
                    "accountHolderAddress": {
                      "address1": "1500 Stony Brook Road",
                      "address2": "",
                      "city": "Stony Brook",
                      "state": "NY",
                      "zipCode": "11790"
                    },
                    "email": "jdoe@example.com",
                    "referenceId": "bank_account_example",
                    "createdTime": "2018-08-09T14:22:32.5386074-04:00",
                    "modifiedTime": "2018-08-09T14:22:32.5386074-04:00"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Adds a new bank account to the wallet": {
            "parameters": {
              "request": {
                "paymentToken": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                "isDefault": true
              },
              "walletId": 25332
            },
            "responses": {
              "200": {
                "body": {
                  "id": 25332,
                  "defaultToken": "0363077379044018",
                  "creditCards": [
                    {
                      "id": 0,
                      "token": "0363077379044018",
                      "cardHolderName": "John Doe",
                      "cardNumber": "xxxxxxxxxxxx4018",
                      "expirationMonth": 11,
                      "expirationYear": 2017,
                      "billingAddress": {
                        "address1": "1500 Stony Brook Road",
                        "address2": "",
                        "city": "Stony Brook",
                        "state": "NY",
                        "zipCode": "11790"
                      },
                      "email": "jdoe@example.com",
                      "cardState": "Authorized",
                      "cardType": "Visa",
                      "referenceId": "credit_card_example",
                      "createdTime": "2018-08-09T14:22:32.5386074-04:00",
                      "modifiedTime": "2018-08-09T14:22:32.5386074-04:00"
                    }
                  ],
                  "bankAccounts": [
                    {
                      "id": 0,
                      "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
                      "accountNumber": "xxxxxxx777",
                      "routingNumber": "999999999",
                      "type": "Checking",
                      "state": "Authorized",
                      "nickname": "Citi Checking Account",
                      "accountHolderName": "John Doe",
                      "accountHolderAddress": {
                        "address1": "1500 Stony Brook Road",
                        "address2": "",
                        "city": "Stony Brook",
                        "state": "NY",
                        "zipCode": "11790"
                      },
                      "email": "jdoe@example.com",
                      "referenceId": "bank_account_example",
                      "createdTime": "2018-08-09T14:22:32.5386074-04:00",
                      "modifiedTime": "2018-08-09T14:22:32.5386074-04:00"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/wallet/{walletId}/BankAccount/{walletBankAcctId}": {
      "delete": {
        "tags": [
          "Wallet"
        ],
        "summary": "Deletes the wallet bank account.",
        "operationId": "RemoveWalletBankAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "description": "The wallet identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "walletBankAcctId",
            "in": "path",
            "description": "The wallet bank acct identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": null
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Deletes the wallet bank account.": {
            "parameters": {
              "walletId": 25332,
              "walletBankAcctId": 59863
            },
            "responses": {
              "200": {}
            }
          }
        }
      }
    },
    "/v2/wallet/{walletId}/CreditCard/{walletCreditCardId}": {
      "delete": {
        "tags": [
          "Wallet"
        ],
        "summary": "Deletes the wallet credit card.",
        "operationId": "RemoveWalletCreditCard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "walletId",
            "in": "path",
            "description": "The wallet identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "walletCreditCardId",
            "in": "path",
            "description": "The wallet credit card identifier.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "access token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": null
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "x-ms-examples": {
          "Deletes the wallet credit card.": {
            "parameters": {
              "walletId": 25332,
              "walletCreditCardId": 59863
            },
            "responses": {
              "200": {}
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BankAccountModel": {
      "description": "The model sent to the client in response to a GET request for a bank account.",
      "required": [
        "routingNumber",
        "type",
        "state",
        "accountHolderName",
        "accountHolderAddress",
        "email"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "token": {
          "description": "The payment token for the bank account.",
          "type": "string"
        },
        "accountNumber": {
          "description": "The bank account number.",
          "pattern": "\\d{4,17}$",
          "type": "string"
        },
        "routingNumber": {
          "description": "The routing number of the bank where the bank account was opened.",
          "pattern": "\\d{9,9}$",
          "type": "string"
        },
        "type": {
          "description": "The bank account type.",
          "enum": [
            "Unknown",
            "Checking",
            "Savings"
          ],
          "type": "string"
        },
        "state": {
          "description": "The state that the bank acocunt is in.",
          "enum": [
            "Unknown",
            "New",
            "Pending",
            "Authorized",
            "Disabled"
          ],
          "type": "string"
        },
        "nickname": {
          "description": "The aribtrary nickname of the account, used as a way to identify the account.",
          "type": "string"
        },
        "accountHolderName": {
          "description": "The name of the individual or entity that is autorized to make transactions for the bank account.",
          "type": "string"
        },
        "accountHolderAddress": {
          "$ref": "#/definitions/Address",
          "description": "The mailing address for the account holder."
        },
        "email": {
          "description": "The email address for the account holder.",
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the bank account.",
          "type": "string"
        },
        "createdTime": {
          "format": "date-time",
          "description": "The timestamp indicating when the bank account was created.",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "The timestamp indicating the last time that the details of the bank account were modified.",
          "type": "string"
        }
      }
    },
    "Address": {
      "description": "Defines the properties and methods of an address.",
      "required": [
        "address1",
        "city",
        "state",
        "zipCode"
      ],
      "type": "object",
      "properties": {
        "address1": {
          "description": "The first line of the street address.  Typcically contains\r\nthe number and street name.",
          "type": "string"
        },
        "address2": {
          "description": "The second line of the street address.  Typically contains\r\nan apartment number, suite number or department.",
          "type": "string"
        },
        "city": {
          "description": "The city where the address is situated.",
          "type": "string"
        },
        "state": {
          "description": "The state where the address is located.",
          "type": "string"
        },
        "zipCode": {
          "description": "The postal code for the address.",
          "type": "string"
        }
      }
    },
    "UpdateBankAccountModel": {
      "description": "The request model sent by the client for updating bank accounts in the payment platform.",
      "required": [
        "accountHolderName",
        "accountHolderAddress",
        "email"
      ],
      "type": "object",
      "properties": {
        "token": {
          "description": "The payment token for the bank account.",
          "type": "string"
        },
        "nickname": {
          "description": "The aribtrary nickname of the account, used as a way to identify the account.",
          "type": "string"
        },
        "accountHolderName": {
          "description": "The name of the individual or entity that is autorized to make transactions for the bank account.",
          "type": "string"
        },
        "accountHolderAddress": {
          "$ref": "#/definitions/Address",
          "description": "The mailing address for the account holder."
        },
        "email": {
          "description": "The email address for the account holder.",
          "type": "string"
        }
      },
      "example": {
        "token": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
        "nickname": "Citi Checking Account",
        "accountHolderName": "John Doe",
        "accountHolderAddress": {
          "address1": "1500 Stony Brook Road",
          "address2": "",
          "city": "Stony Brook",
          "state": "NY",
          "zipCode": "11790"
        },
        "email": "jdoe@example.com"
      }
    },
    "BankAccountRequestModel": {
      "description": "The request model sent by the client for adding new bank accounts to the payment platform.",
      "required": [
        "accountNumber",
        "routingNumber",
        "accountHolderName",
        "accountHolderAddress",
        "type",
        "email"
      ],
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "The bank account number.",
          "pattern": "\\d{4,17}$",
          "type": "string"
        },
        "routingNumber": {
          "description": "The routing number of the bank where the bank account was opened.",
          "pattern": "\\d{9,9}$",
          "type": "string"
        },
        "accountHolderName": {
          "description": "The name of the individual or entity that is autorized to make transactions for the bank account.",
          "type": "string"
        },
        "accountHolderAddress": {
          "$ref": "#/definitions/Address",
          "description": "The mailing address for the account holder."
        },
        "type": {
          "description": "The bank account type.",
          "enum": [
            "Unknown",
            "Checking",
            "Savings"
          ],
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the bank account.",
          "type": "string"
        },
        "nickname": {
          "description": "The aribtrary nickname of the account, used as a way to identify the account.",
          "type": "string"
        },
        "email": {
          "description": "The email address for the account holder.",
          "type": "string"
        },
        "redirectUrl": {
          "description": "The url that the client will be redirected to after the bank account has been created.",
          "type": "string"
        }
      },
      "example": {
        "accountNumber": "7777777777",
        "routingNumber": "999999999",
        "accountHolderName": "John Doe",
        "accountHolderAddress": {
          "address1": "1500 Stony Brook Road",
          "address2": "",
          "city": "Stony Brook",
          "state": "NY",
          "zipCode": "11790"
        },
        "type": "Checking",
        "referenceId": "bank_account_example",
        "nickname": "Citi Checking Account",
        "email": "jdoe@example.com",
        "redirectUrl": "https://api.example.com/v1/bankaccounts/callback/"
      }
    },
    "BankAccountResponseModel": {
      "description": "The response model that is returned to the client when a new bank account is added\r\nto the platform",
      "type": "object",
      "properties": {
        "token": {
          "description": "The payment token for the bank account.",
          "type": "string"
        },
        "bankAccountState": {
          "description": "The state that the bank acocunt is in.",
          "enum": [
            "Unknown",
            "New",
            "Pending",
            "Authorized",
            "Disabled"
          ],
          "type": "string"
        },
        "redirectUrl": {
          "description": "The url that the client will be redirected to after the bank account has been created.",
          "type": "string"
        }
      }
    },
    "BinRequestModel": {
      "description": "The request model sent by the client for retrieving credit card bin information.",
      "required": [
        "cardNumber"
      ],
      "type": "object",
      "properties": {
        "cardNumber": {
          "description": "The number on the credit card.",
          "type": "string"
        }
      },
      "example": {
        "cardNumber": "4111113956134018"
      }
    },
    "Bin": {
      "description": "Defines a BIN (bank identification number)",
      "type": "object",
      "properties": {
        "bin": {
          "description": "Gets the bin.",
          "type": "string"
        },
        "brand": {
          "description": "Gets or sets the brand.",
          "enum": [
            "Unknown",
            "Visa",
            "MasterCard",
            "Amex",
            "Discover"
          ],
          "type": "string",
          "readOnly": true
        },
        "isDebitCard": {
          "description": "Gets or sets a value indicating whether this instance is debit.",
          "type": "boolean"
        },
        "isCheckCard": {
          "description": "Gets or sets a value indicating whether this instance is check card.",
          "type": "boolean"
        },
        "isGiftCard": {
          "description": "Gets or sets a value indicating whether this instance is gift card.",
          "type": "boolean"
        },
        "isCorporateCard": {
          "description": "Gets or sets a value indicating whether this instance is corporate card.",
          "type": "boolean"
        },
        "isFleetCard": {
          "description": "Gets or sets a value indicating whether this instance is fleet card.",
          "type": "boolean"
        },
        "isPrepaidCard": {
          "description": "Gets or sets a value indicating whether this instance is prepaid card.",
          "type": "boolean"
        }
      }
    },
    "CheckoutResponseModel": {
      "description": "Checkout Response",
      "type": "object",
      "properties": {
        "checkoutId": {
          "format": "int32",
          "description": "Gets or sets the checkout identifier.",
          "type": "integer"
        },
        "clientId": {
          "description": "Gets or sets the client identifier.",
          "type": "string"
        },
        "redirectUrl": {
          "description": "Gets or sets the redirect URL.",
          "type": "string"
        },
        "referenceId": {
          "description": "Gets or sets the reference identifier.",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "Gets or sets the amount.",
          "type": "number"
        },
        "nameOnAccount": {
          "description": "Gets or sets the name on account.",
          "type": "string"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Gets or sets the expiration date.",
          "type": "string"
        },
        "enableBillingInformation": {
          "description": "Gets or sets a value indicating whether [enable billing information].",
          "type": "boolean"
        },
        "billingAddress": {
          "$ref": "#/definitions/Address",
          "description": "Gets or sets the billing address."
        },
        "email": {
          "description": "Gets or sets the email.",
          "type": "string"
        },
        "requireEmail": {
          "description": "Gets or sets a value indicating whether [require email].",
          "type": "boolean"
        },
        "enableSaveOption": {
          "description": "Gets or sets a value indicating whether [enable save option].",
          "type": "boolean"
        }
      }
    },
    "CheckoutRequestModel": {
      "description": "Checkout request model",
      "type": "object",
      "properties": {
        "redirectUrl": {
          "description": "Gets or sets the redirect URL.",
          "type": "string"
        },
        "referenceId": {
          "description": "Gets or sets the reference identifier.",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "Gets or sets the amount.",
          "type": "number"
        },
        "nameOnAccount": {
          "description": "Gets or sets the name on account.",
          "type": "string"
        },
        "expirationDate": {
          "format": "date-time",
          "description": "Gets or sets the expiration date.",
          "type": "string"
        },
        "enableBillingInformation": {
          "description": "Gets or sets a value indicating whether [enable billing information].",
          "type": "boolean"
        },
        "billingAddress": {
          "$ref": "#/definitions/Address",
          "description": "Gets or sets the billing address."
        },
        "email": {
          "description": "Gets or sets the email.",
          "type": "string"
        },
        "requireEmail": {
          "description": "Gets or sets a value indicating whether [require email].",
          "type": "boolean"
        },
        "enableSaveOption": {
          "description": "Gets or sets a value indicating whether [enable save option].",
          "type": "boolean"
        }
      },
      "example": {
        "redirectUrl": "https://api.example.com/v1/checkout/callback/",
        "referenceId": "52474662",
        "amount": 100.32,
        "nameOnAccount": "John Doe",
        "expirationDate": "2018-08-09T21:22:32.4292275Z",
        "enableBillingInformation": true,
        "billingAddress": {
          "address1": "1500 Stony Brook Road",
          "address2": "",
          "city": "Stony Brook",
          "state": "NY",
          "zipCode": "11790"
        },
        "email": "jdoe@example.com",
        "requireEmail": true,
        "enableSaveOption": true
      }
    },
    "CreditCardModel": {
      "description": "The model sent to the client in response to a GET request for a credit card.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "token": {
          "description": "The payment token for the credit card.",
          "type": "string"
        },
        "cardHolderName": {
          "description": "The name of the cardholder, as it appears on the front of the credit card.",
          "type": "string"
        },
        "cardNumber": {
          "description": "The obfuscated credit card number for the credit card, such as xxxxxxxxxxxx1234",
          "type": "string"
        },
        "expirationMonth": {
          "format": "int32",
          "description": "The expiration month of the credit card.",
          "type": "integer"
        },
        "expirationYear": {
          "format": "int32",
          "description": "The expiration year of the credit card.",
          "type": "integer"
        },
        "billingAddress": {
          "$ref": "#/definitions/Address",
          "description": "The billing address for the credit card holder."
        },
        "email": {
          "description": "The email address for the credit card holder.",
          "type": "string"
        },
        "cardState": {
          "description": "The state that the credit card is in.",
          "enum": [
            "Unknown",
            "New",
            "Authorized",
            "Expired",
            "Deleted",
            "Invalid"
          ],
          "type": "string"
        },
        "cardType": {
          "description": "Gets or sets the type of the card.",
          "enum": [
            "Unknown",
            "Visa",
            "MasterCard",
            "Amex",
            "Discover"
          ],
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the credit card.",
          "type": "string"
        },
        "createdTime": {
          "format": "date-time",
          "description": "The timestamp indicating when the credit card was created.",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "The timestamp indicating the last time that the details of the credit card were modified.",
          "type": "string"
        }
      }
    },
    "UpdateCreditCardModel": {
      "description": "The request model sent by the client for updating credit cards in the payment platform.",
      "required": [
        "token",
        "expirationMonth",
        "expirationYear",
        "cardHolderName",
        "billingAddress",
        "email"
      ],
      "type": "object",
      "properties": {
        "token": {
          "description": "The payment token for the credit card.",
          "type": "string"
        },
        "expirationMonth": {
          "format": "int32",
          "description": "The expiration month of the credit card.",
          "maximum": 12,
          "minimum": 1,
          "type": "integer"
        },
        "expirationYear": {
          "format": "int32",
          "description": "The expiration year of the credit card.",
          "maximum": 2038,
          "minimum": 2018,
          "type": "integer"
        },
        "cardHolderName": {
          "description": "The name of the cardholder, as it appears on the front of the credit card.",
          "type": "string"
        },
        "billingAddress": {
          "$ref": "#/definitions/Address",
          "description": "The billing address for the credit card holder.."
        },
        "email": {
          "description": "A valid email address for the card holder.",
          "type": "string"
        }
      },
      "example": {
        "token": "0363077379044018",
        "expirationMonth": 11,
        "expirationYear": 2017,
        "cardHolderName": "John Doe",
        "billingAddress": {
          "address1": "1500 Stony Brook Road",
          "address2": "",
          "city": "Stony Brook",
          "state": "NY",
          "zipCode": "11790"
        },
        "email": "jdoe@example.com"
      }
    },
    "CreditCardRequestModel": {
      "description": "The request model sent by the client for adding new credit cards to the payment platform.",
      "required": [
        "cardNumber",
        "securityCode",
        "expirationMonth",
        "expirationYear",
        "cardHolderName",
        "billingAddress",
        "email"
      ],
      "type": "object",
      "properties": {
        "cardNumber": {
          "description": "The number on the credit card.",
          "type": "string"
        },
        "securityCode": {
          "description": "The security, or CVV code, on the card.",
          "pattern": "\\d{3,4}",
          "type": "string"
        },
        "expirationMonth": {
          "format": "int32",
          "description": "The expiration month of the credit card.",
          "maximum": 12,
          "minimum": 1,
          "type": "integer"
        },
        "expirationYear": {
          "format": "int32",
          "description": "The expiration year of the credit card.",
          "maximum": 2038,
          "minimum": 2018,
          "type": "integer"
        },
        "cardHolderName": {
          "description": "The name of the cardholder, as it appears on the front of the credit card.",
          "type": "string"
        },
        "billingAddress": {
          "$ref": "#/definitions/Address",
          "description": "The billing address for the credit card holder.."
        },
        "email": {
          "description": "A valid email address for the card holder.",
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the credit card.",
          "type": "string"
        },
        "redirectUrl": {
          "description": "The url that the client will be redirected to after the credit card has been created.",
          "type": "string"
        }
      },
      "example": {
        "cardNumber": "4111113956134018",
        "securityCode": "123",
        "expirationMonth": 11,
        "expirationYear": 2017,
        "cardHolderName": "John Doe",
        "billingAddress": {
          "address1": "1500 Stony Brook Road",
          "address2": "",
          "city": "Stony Brook",
          "state": "NY",
          "zipCode": "11790"
        },
        "email": "jdoe@example.com",
        "referenceId": "credit_card_example",
        "redirectUrl": "https://api.example.com/v1/creditcards/callback/"
      }
    },
    "CreditCardResponseModel": {
      "description": "The response model sent to the client when a new credit card is added to the platform.",
      "type": "object",
      "properties": {
        "token": {
          "description": "The payment token for the credit card",
          "type": "string"
        },
        "cardState": {
          "description": "The state that the credit card is in.",
          "enum": [
            "Unknown",
            "New",
            "Authorized",
            "Expired",
            "Deleted",
            "Invalid"
          ],
          "type": "string"
        },
        "code": {
          "description": "The pre-authorization result code.",
          "type": "string"
        },
        "message": {
          "description": "The pre-authorization result message.",
          "type": "string"
        },
        "redirectUrl": {
          "description": "The URL that the client will be redirected to after the credit card has been created.",
          "type": "string"
        }
      }
    },
    "PaymentModel": {
      "description": "The model sent to the client requests the details of a payment, or adds a new payment\r\nto the platform.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID of the payment.",
          "type": "integer"
        },
        "accountId": {
          "format": "int32",
          "description": "The unique ID of the account that the payment was made for.",
          "type": "integer"
        },
        "paymentAmount": {
          "format": "double",
          "description": "The payment amount.",
          "type": "number"
        },
        "description": {
          "description": "The description of what was paid for.",
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the payment.",
          "type": "string"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PaymentMethodModel",
          "description": "The method of payment."
        },
        "result": {
          "$ref": "#/definitions/PaymentResultModel",
          "description": "The result of the payment request."
        },
        "refunds": {
          "description": "Gets or sets the refund result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefundResultModel"
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The timestamp indicating when the payment was created.",
          "type": "string"
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The timestamp indicating the last time that the details of the payment were modified.",
          "type": "string"
        }
      }
    },
    "PaymentMethodModel": {
      "description": "Defines a a funding source for a payment request.",
      "required": [
        "paymentToken",
        "type"
      ],
      "type": "object",
      "properties": {
        "paymentToken": {
          "description": "The credit card or bank account token that will be used for payment.",
          "type": "string"
        },
        "type": {
          "description": "The type of funding source that will be used for the payment.",
          "enum": [
            "Unknown",
            "Credit Card",
            "ACH"
          ],
          "type": "string"
        }
      }
    },
    "PaymentResultModel": {
      "description": "The model sent to the client as a part of the payment model.\r\nProvides details on the payment result.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The current status of the payment.",
          "enum": [
            "Unknown",
            "New",
            "Authorized",
            "Captured",
            "Expired",
            "Declined",
            "Failed",
            "Cancelled",
            "Charge Back",
            "Refunded",
            "Partially Refunded"
          ],
          "type": "string"
        },
        "code": {
          "description": "The payment result code.",
          "type": "string"
        },
        "message": {
          "description": "The payment result message.",
          "type": "string"
        },
        "providerAccountId": {
          "description": "The unique ID of the provider account that was used to make this payment.",
          "type": "string"
        },
        "merchantTransactionId": {
          "description": "Tthe merchant transaction identifier.",
          "type": "string"
        },
        "merchantTransactionFee": {
          "format": "double",
          "description": "The merchant transaction fee.",
          "type": "number"
        }
      }
    },
    "RefundResultModel": {
      "description": "The model sent to the client as a part of the payment model.\r\nProvides details on the refund result.",
      "type": "object",
      "properties": {
        "status": {
          "description": "The current status of the refund.",
          "enum": [
            "Unknown",
            "New",
            "Authorized",
            "Captured",
            "Expired",
            "Declined",
            "Failed",
            "Cancelled",
            "Charge Back",
            "Refunded",
            "Partially Refunded"
          ],
          "type": "string"
        },
        "code": {
          "description": "The refund result code.",
          "type": "string"
        },
        "message": {
          "description": "The refund result message.",
          "type": "string"
        },
        "merchantTransactionId": {
          "description": "The Merchant Transaction ID number for the payment that is being refunded.",
          "type": "string"
        },
        "providerAccountId": {
          "description": "The unique ID of the provider account that was used to make this refund.",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "The amount to be refunded.  If an amount less than the original payment amount is\r\nspecified, a partial refund will be processed.  If no amount is specified, a full refund\r\nwill be processed.",
          "type": "number"
        },
        "reason": {
          "description": "The reason for issuing the refund.",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The timestamp indicating when the refund was created.",
          "type": "string"
        }
      }
    },
    "BaseQuery": {
      "description": "A base collection of query parameters",
      "type": "object",
      "properties": {
        "referenceId": {
          "description": "Gets or sets the reference identifier.",
          "type": "string"
        },
        "minDate": {
          "format": "date-time",
          "description": "Gets or sets the minimum date.",
          "type": "string"
        },
        "maxDate": {
          "format": "date-time",
          "description": "Gets or sets the maximum date.",
          "type": "string"
        }
      }
    },
    "PaymentRequestModel": {
      "description": "The request model sent by the client to add a new payment to the platform.",
      "required": [
        "paymentMethod"
      ],
      "type": "object",
      "properties": {
        "paymentAmount": {
          "format": "double",
          "description": "The payment amount.",
          "type": "number"
        },
        "description": {
          "description": "The description of what will be paid for.",
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the payment.",
          "type": "string"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PaymentMethodModel",
          "description": "The method of payment."
        },
        "callbackUrl": {
          "description": "The callback URL where payment notifications will be sent.  Payment notifications are sent when the \r\nstate of a payment changes.  Notifications will be sent as an HTTP POST to the URL provided and will\r\ncontain a PaymentId and optional ReferenceId, if one was provided when the payment was created.",
          "type": "string"
        }
      },
      "example": {
        "id": 371975,
        "accountId": 2,
        "paymentAmount": 100.32,
        "description": "Payment of balance due",
        "referenceId": "example_payment",
        "paymentMethod": {
          "paymentToken": "9439061618674018",
          "type": "Credit Card"
        },
        "result": {
          "status": "Authorized",
          "code": "FMS000",
          "message": "Success",
          "providerAccountId": "01264098",
          "merchantTransactionId": "134557252146764000",
          "merchantTransactionFee": 2.96
        },
        "createdDate": "2018-08-09T14:22:32.4761046-04:00",
        "modifiedDate": "2018-08-09T14:22:32.4761046-04:00"
      }
    },
    "RefundRequestModel": {
      "description": "The request model sent by the client to add a new refund to the platform.",
      "required": [
        "reason"
      ],
      "type": "object",
      "properties": {
        "amount": {
          "format": "double",
          "description": "The amount to be refunded.  If an amount less than the original payment amount is\r\nspecified, a partial refund will be processed.  If no amount is specified, a full refund\r\nwill be processed.",
          "type": "number"
        },
        "reason": {
          "description": "The reason for issuing the refund.",
          "type": "string"
        }
      },
      "example": {
        "amount": 27.5,
        "reason": "Refund for overpayment."
      }
    },
    "SubscriptionModel": {
      "description": "The model sent to the client in response to a GET request for a payment subscription.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The id of the payment subscription.",
          "type": "integer"
        },
        "name": {
          "description": "The name of payment subscription.",
          "type": "string"
        },
        "description": {
          "description": "The description of payment subscription.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the payment subscription.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "runDay": {
          "format": "int32",
          "description": "The process day of the payment subscription.",
          "type": "integer"
        },
        "state": {
          "description": "The state that payment subscription is in.",
          "enum": [
            "Active",
            "Inactive",
            "Expired"
          ],
          "type": "string"
        },
        "paymentType": {
          "description": "The payment type of the payment subscription.",
          "enum": [
            "Unknown",
            "Credit Card",
            "ACH"
          ],
          "type": "string"
        },
        "paymentToken": {
          "description": "The payment token of the payment subscription.",
          "type": "string"
        },
        "amountType": {
          "description": "The amount type of the payment subscription.",
          "enum": [
            "Fixed",
            "Dynamic"
          ],
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "The amount of money to be charged by the payment subscription.",
          "type": "number"
        },
        "amountWebServiceURL": {
          "description": "The url of web api to use to retrieve the amount to be charged by the payment subscription.",
          "type": "string"
        },
        "callbackWebServiceURL": {
          "description": "The url of a web api to use to post back notifications each time payment subscription is processed.",
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the credit card.",
          "type": "string"
        },
        "lastProcessed": {
          "format": "date-time",
          "description": "The timestamp indicating when the subscription was last processed.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "The date indicating when the payment subscription should be stopped.",
          "type": "string"
        },
        "createdTime": {
          "format": "date-time",
          "description": "The timestamp indicating when the credit card was created.",
          "type": "string"
        },
        "modifiedTime": {
          "format": "date-time",
          "description": "The timestamp indicating the last time that the details of the credit card were modified.",
          "type": "string"
        }
      }
    },
    "UpdateSubscriptionModel": {
      "description": "The request model sent by the client for updating subscription in the payment platform.",
      "required": [
        "id",
        "name",
        "runDay",
        "state",
        "paymentType",
        "paymentToken",
        "amountType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The id of the payment subscription.",
          "type": "integer"
        },
        "name": {
          "description": "The name of payment subscription.",
          "type": "string"
        },
        "description": {
          "description": "The description of payment subscription.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the payment subscription.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "runDay": {
          "format": "int32",
          "description": "The process day of the payment subscription.",
          "maximum": 31,
          "minimum": 1,
          "type": "integer"
        },
        "state": {
          "description": "The state that payment subscription is in.",
          "enum": [
            "Active",
            "Inactive",
            "Expired"
          ],
          "type": "string"
        },
        "paymentType": {
          "description": "The payment type of the payment subscription.",
          "enum": [
            "Unknown",
            "Credit Card",
            "ACH"
          ],
          "type": "string"
        },
        "paymentToken": {
          "description": "The payment token of the payment subscription.",
          "type": "string"
        },
        "amountType": {
          "description": "The amount type of the payment subscription.",
          "enum": [
            "Fixed",
            "Dynamic"
          ],
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "The amount of money to be charged by the payment subscription.",
          "type": "number"
        },
        "amountWebServiceURL": {
          "description": "The url of web api to use to retrieve the amount to be charged by the payment subscription.",
          "type": "string"
        },
        "callbackWebServiceURL": {
          "description": "The url of a web api to use to post back notifications each time payment subscription is processed.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "The date indicating when the payment subscription should be stopped.",
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the credit card.",
          "type": "string"
        }
      },
      "example": {
        "id": 61718,
        "name": "Example Autopay",
        "description": "An example of the subscription schema",
        "properties": {
          "prop1": "value1",
          "prop2": "value2"
        },
        "runDay": 15,
        "state": "Active",
        "paymentType": "Credit Card",
        "paymentToken": "0649178444111000",
        "amountType": "Dynamic",
        "amountWebServiceURL": "https://api.example.com/members/1234/balance",
        "callbackWebServiceURL": "https://api.example.com/v1/subscriptions/callback/",
        "endDate": "2019-08-09T14:22:32.507356-04:00",
        "referenceId": "example_subscription"
      }
    },
    "SubscriptionRequestModel": {
      "description": "The request model sent by the client for adding new subscription to the payment platform.",
      "required": [
        "name",
        "runDay",
        "state",
        "paymentType",
        "paymentToken",
        "amountType"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of payment subscription.",
          "type": "string"
        },
        "description": {
          "description": "The description of payment subscription.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the payment subscription.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "runDay": {
          "format": "int32",
          "description": "The process day of the payment subscription.",
          "maximum": 31,
          "minimum": 1,
          "type": "integer"
        },
        "state": {
          "description": "The state that payment subscription is in.",
          "enum": [
            "Active",
            "Inactive",
            "Expired"
          ],
          "type": "string"
        },
        "paymentType": {
          "description": "The payment type of the payment subscription.",
          "enum": [
            "Unknown",
            "Credit Card",
            "ACH"
          ],
          "type": "string"
        },
        "paymentToken": {
          "description": "The payment token of the payment subscription.",
          "type": "string"
        },
        "amountType": {
          "description": "The amount type of the payment subscription.",
          "enum": [
            "Fixed",
            "Dynamic"
          ],
          "type": "string"
        },
        "amount": {
          "format": "double",
          "description": "The amount of money to be charged by the payment subscription.",
          "type": "number"
        },
        "amountWebServiceURL": {
          "description": "The url of web api to use to retrieve the amount to be charged by the payment subscription.",
          "type": "string"
        },
        "callbackWebServiceURL": {
          "description": "The url of a web api to use to post back notifications each time payment subscription is processed.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "The date indicating when the payment subscription should be stopped.",
          "type": "string"
        },
        "referenceId": {
          "description": "The client application provided reference ID for the credit card.",
          "type": "string"
        }
      },
      "example": {
        "name": "Example Autopay",
        "description": "An example of the subscription schema",
        "properties": {
          "prop1": "value1",
          "prop2": "value2"
        },
        "runDay": 15,
        "state": "Active",
        "paymentType": "Credit Card",
        "paymentToken": "0649178444111000",
        "amountType": "Dynamic",
        "amountWebServiceURL": "https://api.example.com/members/1234/balance",
        "callbackWebServiceURL": "https://api.example.com/v1/subscriptions/callback/",
        "endDate": "2019-08-09T14:22:32.5229817-04:00",
        "referenceId": "example_subscription"
      }
    },
    "SubscriptionResponseModel": {
      "description": "The response model that is returned to the client when a new payment subscription is added to the platform.",
      "type": "object",
      "properties": {
        "referenceId": {
          "description": "Gets or sets the reference id.",
          "type": "string"
        },
        "state": {
          "description": "Gets or sets the subscription state.",
          "enum": [
            "Active",
            "Inactive",
            "Expired"
          ],
          "type": "string"
        }
      }
    },
    "WalletModel": {
      "description": "Wallet Model",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "defaultToken": {
          "description": "Gets or sets the default token.",
          "type": "string"
        },
        "creditCards": {
          "description": "Gets or sets the credit cards.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditCardModel"
          }
        },
        "bankAccounts": {
          "description": "Gets or sets the bank accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankAccountModel"
          }
        }
      }
    },
    "WalletRequestModel": {
      "description": "Wallet Request Model",
      "type": "object",
      "properties": {
        "referenceId": {
          "description": "Gets or sets the reference identifier.",
          "type": "string"
        }
      },
      "example": {
        "referenceId": "wallet_example"
      }
    },
    "WalletCreditCardRequestModel": {
      "description": "Wallet credit card request model",
      "type": "object",
      "properties": {
        "paymentToken": {
          "description": "Gets or sets the payment token.",
          "type": "string"
        },
        "isDefault": {
          "description": "Gets or sets a value indicating whether this instance is default.",
          "type": "boolean"
        }
      },
      "example": {
        "paymentToken": "0363077379044018",
        "isDefault": true
      }
    },
    "WalletBankAccountRequestModel": {
      "description": "Wallet Bank Account Request Model",
      "type": "object",
      "properties": {
        "paymentToken": {
          "description": "Gets or sets the payment token.",
          "type": "string"
        },
        "isDefault": {
          "description": "Gets or sets a value indicating whether this instance is default.",
          "type": "boolean"
        }
      },
      "example": {
        "paymentToken": "rN1u2Z264MmyunW_OrHHib4KHQTF7ckVHCVJrN2ZWLM1",
        "isDefault": true
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "description": "OAuth2 Client Credentials Flow",
      "flow": "application",
      "tokenUrl": "https://login-model.softheon.com/identity/core/connect/token",
      "scopes": {
        "paymentapi": "Payment API Access"
      }
    }
  }
}