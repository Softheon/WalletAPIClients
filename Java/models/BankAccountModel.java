/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package walletapiv2.models;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The model sent to the client in response to a GET request for a bank
 * account.
 */
public class BankAccountModel {
    /**
     * Gets or sets the identifier.
     */
    @JsonProperty(value = "id")
    private Integer id;

    /**
     * The payment token for the bank account.
     */
    @JsonProperty(value = "token")
    private String token;

    /**
     * The bank account number.
     */
    @JsonProperty(value = "accountNumber")
    private String accountNumber;

    /**
     * The routing number of the bank where the bank account was opened.
     */
    @JsonProperty(value = "routingNumber", required = true)
    private String routingNumber;

    /**
     * The bank account type. Possible values include: 'Unknown', 'Checking',
     * 'Savings'.
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /**
     * The state that the bank acocunt is in. Possible values include:
     * 'Unknown', 'New', 'Pending', 'Authorized', 'Disabled'.
     */
    @JsonProperty(value = "state", required = true)
    private String state;

    /**
     * The aribtrary nickname of the account, used as a way to identify the
     * account.
     */
    @JsonProperty(value = "nickname")
    private String nickname;

    /**
     * The name of the individual or entity that is autorized to make
     * transactions for the bank account.
     */
    @JsonProperty(value = "accountHolderName", required = true)
    private String accountHolderName;

    /**
     * The mailing address for the account holder.
     */
    @JsonProperty(value = "accountHolderAddress", required = true)
    private Address accountHolderAddress;

    /**
     * The email address for the account holder.
     */
    @JsonProperty(value = "email", required = true)
    private String email;

    /**
     * The client application provided reference ID for the bank account.
     */
    @JsonProperty(value = "referenceId")
    private String referenceId;

    /**
     * The timestamp indicating when the bank account was created.
     */
    @JsonProperty(value = "createdTime")
    private DateTime createdTime;

    /**
     * The timestamp indicating the last time that the details of the bank
     * account were modified.
     */
    @JsonProperty(value = "modifiedTime")
    private DateTime modifiedTime;

    /**
     * Get gets or sets the identifier.
     *
     * @return the id value
     */
    public Integer id() {
        return this.id;
    }

    /**
     * Set gets or sets the identifier.
     *
     * @param id the id value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get the payment token for the bank account.
     *
     * @return the token value
     */
    public String token() {
        return this.token;
    }

    /**
     * Set the payment token for the bank account.
     *
     * @param token the token value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withToken(String token) {
        this.token = token;
        return this;
    }

    /**
     * Get the bank account number.
     *
     * @return the accountNumber value
     */
    public String accountNumber() {
        return this.accountNumber;
    }

    /**
     * Set the bank account number.
     *
     * @param accountNumber the accountNumber value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }

    /**
     * Get the routing number of the bank where the bank account was opened.
     *
     * @return the routingNumber value
     */
    public String routingNumber() {
        return this.routingNumber;
    }

    /**
     * Set the routing number of the bank where the bank account was opened.
     *
     * @param routingNumber the routingNumber value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withRoutingNumber(String routingNumber) {
        this.routingNumber = routingNumber;
        return this;
    }

    /**
     * Get the bank account type. Possible values include: 'Unknown', 'Checking', 'Savings'.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the bank account type. Possible values include: 'Unknown', 'Checking', 'Savings'.
     *
     * @param type the type value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the state that the bank acocunt is in. Possible values include: 'Unknown', 'New', 'Pending', 'Authorized', 'Disabled'.
     *
     * @return the state value
     */
    public String state() {
        return this.state;
    }

    /**
     * Set the state that the bank acocunt is in. Possible values include: 'Unknown', 'New', 'Pending', 'Authorized', 'Disabled'.
     *
     * @param state the state value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Get the aribtrary nickname of the account, used as a way to identify the account.
     *
     * @return the nickname value
     */
    public String nickname() {
        return this.nickname;
    }

    /**
     * Set the aribtrary nickname of the account, used as a way to identify the account.
     *
     * @param nickname the nickname value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withNickname(String nickname) {
        this.nickname = nickname;
        return this;
    }

    /**
     * Get the name of the individual or entity that is autorized to make transactions for the bank account.
     *
     * @return the accountHolderName value
     */
    public String accountHolderName() {
        return this.accountHolderName;
    }

    /**
     * Set the name of the individual or entity that is autorized to make transactions for the bank account.
     *
     * @param accountHolderName the accountHolderName value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withAccountHolderName(String accountHolderName) {
        this.accountHolderName = accountHolderName;
        return this;
    }

    /**
     * Get the mailing address for the account holder.
     *
     * @return the accountHolderAddress value
     */
    public Address accountHolderAddress() {
        return this.accountHolderAddress;
    }

    /**
     * Set the mailing address for the account holder.
     *
     * @param accountHolderAddress the accountHolderAddress value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withAccountHolderAddress(Address accountHolderAddress) {
        this.accountHolderAddress = accountHolderAddress;
        return this;
    }

    /**
     * Get the email address for the account holder.
     *
     * @return the email value
     */
    public String email() {
        return this.email;
    }

    /**
     * Set the email address for the account holder.
     *
     * @param email the email value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Get the client application provided reference ID for the bank account.
     *
     * @return the referenceId value
     */
    public String referenceId() {
        return this.referenceId;
    }

    /**
     * Set the client application provided reference ID for the bank account.
     *
     * @param referenceId the referenceId value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }

    /**
     * Get the timestamp indicating when the bank account was created.
     *
     * @return the createdTime value
     */
    public DateTime createdTime() {
        return this.createdTime;
    }

    /**
     * Set the timestamp indicating when the bank account was created.
     *
     * @param createdTime the createdTime value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withCreatedTime(DateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * Get the timestamp indicating the last time that the details of the bank account were modified.
     *
     * @return the modifiedTime value
     */
    public DateTime modifiedTime() {
        return this.modifiedTime;
    }

    /**
     * Set the timestamp indicating the last time that the details of the bank account were modified.
     *
     * @param modifiedTime the modifiedTime value to set
     * @return the BankAccountModel object itself.
     */
    public BankAccountModel withModifiedTime(DateTime modifiedTime) {
        this.modifiedTime = modifiedTime;
        return this;
    }

}
