/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package softheon.wallet.api.client.models;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Defines a payment filter when requesting a collection of payments.
 */
public class PaymentFilter {
    /**
     * The client application provided reference ID for the payment.
     */
    @JsonProperty(value = "referenceId", required = true)
    private String referenceId;

    /**
     * The optional lower bound of the range for payment date.
     */
    @JsonProperty(value = "minDate")
    private DateTime minDate;

    /**
     * The optional upper bound of the range for payment date.
     */
    @JsonProperty(value = "maxDate")
    private DateTime maxDate;

    /**
     * Get the referenceId value.
     *
     * @return the referenceId value
     */
    public String referenceId() {
        return this.referenceId;
    }

    /**
     * Set the referenceId value.
     *
     * @param referenceId the referenceId value to set
     * @return the PaymentFilter object itself.
     */
    public PaymentFilter withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }

    /**
     * Get the minDate value.
     *
     * @return the minDate value
     */
    public DateTime minDate() {
        return this.minDate;
    }

    /**
     * Set the minDate value.
     *
     * @param minDate the minDate value to set
     * @return the PaymentFilter object itself.
     */
    public PaymentFilter withMinDate(DateTime minDate) {
        this.minDate = minDate;
        return this;
    }

    /**
     * Get the maxDate value.
     *
     * @return the maxDate value
     */
    public DateTime maxDate() {
        return this.maxDate;
    }

    /**
     * Set the maxDate value.
     *
     * @param maxDate the maxDate value to set
     * @return the PaymentFilter object itself.
     */
    public PaymentFilter withMaxDate(DateTime maxDate) {
        this.maxDate = maxDate;
        return this;
    }

}
