# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Softheon.Wallet.Api.Client
  module Models
    #
    # The model sent to the client as a part of the payment model.
    # Provides details on the refund result.
    #
    class RefundResultModel
      # @return [Enum] The current status of the refund. Possible values
      # include: 'Unknown', 'New', 'Authorized', 'Captured', 'Expired',
      # 'Declined', 'Failed', 'Cancelled', 'Charge Back', 'Refunded',
      # 'Partially Refunded'
      attr_accessor :status

      # @return [String] The refund result code.
      attr_accessor :code

      # @return [String] The refund result message.
      attr_accessor :message

      # @return [String] The Merchant Transaction ID number for the payment
      # that is being refunded.
      attr_accessor :merchant_transaction_id

      # @return [String] The unique ID of the provider account that was used to
      # make this refund.
      attr_accessor :provider_account_id

      # @return [Float] The amount to be refunded.  If an amount less than the
      # original payment amount is
      # specified, a partial refund will be processed.  If no amount is
      # specified, a full refund
      # will be processed.
      attr_accessor :amount

      # @return [String] The reason for issuing the refund.
      attr_accessor :reason

      # @return [DateTime] The timestamp indicating when the refund was
      # created.
      attr_accessor :created_date


      #
      # Mapper for RefundResultModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'RefundResultModel',
          type: {
            name: 'Composite',
            class_name: 'RefundResultModel',
            model_properties: {
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'status',
                type: {
                  name: 'String'
                }
              },
              code: {
                client_side_validation: true,
                required: false,
                serialized_name: 'code',
                type: {
                  name: 'String'
                }
              },
              message: {
                client_side_validation: true,
                required: false,
                serialized_name: 'message',
                type: {
                  name: 'String'
                }
              },
              merchant_transaction_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'merchantTransactionId',
                type: {
                  name: 'String'
                }
              },
              provider_account_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'providerAccountId',
                type: {
                  name: 'String'
                }
              },
              amount: {
                client_side_validation: true,
                required: false,
                serialized_name: 'amount',
                type: {
                  name: 'Double'
                }
              },
              reason: {
                client_side_validation: true,
                required: false,
                serialized_name: 'reason',
                type: {
                  name: 'String'
                }
              },
              created_date: {
                client_side_validation: true,
                required: false,
                serialized_name: 'createdDate',
                type: {
                  name: 'DateTime'
                }
              }
            }
          }
        }
      end
    end
  end
end
