# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module WalletApiV2
  module Models
    #
    # The model sent to the client in response to a GET request for a bank
    # account.
    #
    class BankAccountModel
      # @return [Integer] Gets or sets the identifier.
      attr_accessor :id

      # @return [String] The payment token for the bank account.
      attr_accessor :token

      # @return [String] The bank account number.
      attr_accessor :account_number

      # @return [String] The routing number of the bank where the bank account
      # was opened.
      attr_accessor :routing_number

      # @return [Enum] The bank account type. Possible values include:
      # 'Unknown', 'Checking', 'Savings'
      attr_accessor :type

      # @return [Enum] The state that the bank acocunt is in. Possible values
      # include: 'Unknown', 'New', 'Pending', 'Authorized', 'Disabled'
      attr_accessor :state

      # @return [String] The aribtrary nickname of the account, used as a way
      # to identify the account.
      attr_accessor :nickname

      # @return [String] The name of the individual or entity that is autorized
      # to make transactions for the bank account.
      attr_accessor :account_holder_name

      # @return [Address] The mailing address for the account holder.
      attr_accessor :account_holder_address

      # @return [String] The email address for the account holder.
      attr_accessor :email

      # @return [String] The client application provided reference ID for the
      # bank account.
      attr_accessor :reference_id

      # @return [DateTime] The timestamp indicating when the bank account was
      # created.
      attr_accessor :created_time

      # @return [DateTime] The timestamp indicating the last time that the
      # details of the bank account were modified.
      attr_accessor :modified_time


      #
      # Mapper for BankAccountModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'BankAccountModel',
          type: {
            name: 'Composite',
            class_name: 'BankAccountModel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'id',
                type: {
                  name: 'Number'
                }
              },
              token: {
                client_side_validation: true,
                required: false,
                serialized_name: 'token',
                type: {
                  name: 'String'
                }
              },
              account_number: {
                client_side_validation: true,
                required: false,
                serialized_name: 'accountNumber',
                constraints: {
                  Pattern: '\d{4,17}$'
                },
                type: {
                  name: 'String'
                }
              },
              routing_number: {
                client_side_validation: true,
                required: true,
                serialized_name: 'routingNumber',
                constraints: {
                  Pattern: '\d{9,9}$'
                },
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              state: {
                client_side_validation: true,
                required: true,
                serialized_name: 'state',
                type: {
                  name: 'String'
                }
              },
              nickname: {
                client_side_validation: true,
                required: false,
                serialized_name: 'nickname',
                type: {
                  name: 'String'
                }
              },
              account_holder_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'accountHolderName',
                type: {
                  name: 'String'
                }
              },
              account_holder_address: {
                client_side_validation: true,
                required: true,
                serialized_name: 'accountHolderAddress',
                type: {
                  name: 'Composite',
                  class_name: 'Address'
                }
              },
              email: {
                client_side_validation: true,
                required: true,
                serialized_name: 'email',
                type: {
                  name: 'String'
                }
              },
              reference_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'referenceId',
                type: {
                  name: 'String'
                }
              },
              created_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'createdTime',
                type: {
                  name: 'DateTime'
                }
              },
              modified_time: {
                client_side_validation: true,
                required: false,
                serialized_name: 'modifiedTime',
                type: {
                  name: 'DateTime'
                }
              }
            }
          }
        }
      end
    end
  end
end
